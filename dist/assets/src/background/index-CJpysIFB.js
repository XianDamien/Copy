import{a as me,g as _e,b as Ce,p as de}from"../../settingsService-w9Z-Z5SK.js";import{c as F,a as Ae,g as Ie}from"../../_commonjsHelpers-BosuxZz1.js";const Ee=function(){const e=typeof document<"u"&&document.createElement("link").relList;return e&&e.supports&&e.supports("modulepreload")?"modulepreload":"preload"}(),Re=function(i){return"/"+i},le={},K=function(e,t,a){let s=Promise.resolve();if(t&&t.length>0){document.getElementsByTagName("link");const d=document.querySelector("meta[property=csp-nonce]"),o=d?.nonce||d?.getAttribute("nonce");s=Promise.allSettled(t.map(r=>{if(r=Re(r),r in le)return;le[r]=!0;const c=r.endsWith(".css"),u=c?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${r}"]${u}`))return;const l=document.createElement("link");if(l.rel=c?"stylesheet":Ee,c||(l.as="script"),l.crossOrigin="",l.href=r,o&&l.setAttribute("nonce",o),document.head.appendChild(l),c)return new Promise((f,h)=>{l.addEventListener("load",f),l.addEventListener("error",()=>h(new Error(`Unable to preload CSS for ${r}`)))})}))}function n(d){const o=new Event("vite:preloadError",{cancelable:!0});if(o.payload=d,window.dispatchEvent(o),!o.defaultPrevented)throw d}return s.then(d=>{for(const o of d||[])o.status==="rejected"&&n(o.reason);return e().catch(n)})},Q=(i,e)=>e.some(t=>i instanceof t);let ue,fe;function ke(){return ue||(ue=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])}function Te(){return fe||(fe=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])}const Z=new WeakMap,H=new WeakMap,U=new WeakMap;function Le(i){const e=new Promise((t,a)=>{const s=()=>{i.removeEventListener("success",n),i.removeEventListener("error",d)},n=()=>{t(M(i.result)),s()},d=()=>{a(i.error),s()};i.addEventListener("success",n),i.addEventListener("error",d)});return U.set(e,i),e}function Ne(i){if(Z.has(i))return;const e=new Promise((t,a)=>{const s=()=>{i.removeEventListener("complete",n),i.removeEventListener("error",d),i.removeEventListener("abort",d)},n=()=>{t(),s()},d=()=>{a(i.error||new DOMException("AbortError","AbortError")),s()};i.addEventListener("complete",n),i.addEventListener("error",d),i.addEventListener("abort",d)});Z.set(i,e)}let J={get(i,e,t){if(i instanceof IDBTransaction){if(e==="done")return Z.get(i);if(e==="store")return t.objectStoreNames[1]?void 0:t.objectStore(t.objectStoreNames[0])}return M(i[e])},set(i,e,t){return i[e]=t,!0},has(i,e){return i instanceof IDBTransaction&&(e==="done"||e==="store")?!0:e in i}};function xe(i){J=i(J)}function Be(i){return Te().includes(i)?function(...e){return i.apply(ee(this),e),M(this.request)}:function(...e){return M(i.apply(ee(this),e))}}function Me(i){return typeof i=="function"?Be(i):(i instanceof IDBTransaction&&Ne(i),Q(i,ke())?new Proxy(i,J):i)}function M(i){if(i instanceof IDBRequest)return Le(i);if(H.has(i))return H.get(i);const e=Me(i);return e!==i&&(H.set(i,e),U.set(e,i)),e}const ee=i=>U.get(i);function Fe(i,e,{blocked:t,upgrade:a,blocking:s,terminated:n}={}){const d=indexedDB.open(i,e),o=M(d);return a&&d.addEventListener("upgradeneeded",r=>{a(M(d.result),r.oldVersion,r.newVersion,M(d.transaction),r)}),t&&d.addEventListener("blocked",r=>t(r.oldVersion,r.newVersion,r)),o.then(r=>{n&&r.addEventListener("close",()=>n()),s&&r.addEventListener("versionchange",c=>s(c.oldVersion,c.newVersion,c))}).catch(()=>{}),o}const $e=["get","getKey","getAll","getAllKeys","count"],Pe=["put","add","delete","clear"],V=new Map;function he(i,e){if(!(i instanceof IDBDatabase&&!(e in i)&&typeof e=="string"))return;if(V.get(e))return V.get(e);const t=e.replace(/FromIndex$/,""),a=e!==t,s=Pe.includes(t);if(!(t in(a?IDBIndex:IDBObjectStore).prototype)||!(s||$e.includes(t)))return;const n=async function(d,...o){const r=this.transaction(d,s?"readwrite":"readonly");let c=r.store;return a&&(c=c.index(o.shift())),(await Promise.all([c[t](...o),s&&r.done]))[0]};return V.set(e,n),n}xe(i=>({...i,get:(e,t,a)=>he(e,t)||i.get(e,t,a),has:(e,t)=>!!he(e,t)||i.has(e,t)}));const ze=["continue","continuePrimaryKey","advance"],we={},te=new WeakMap,De=new WeakMap,je={get(i,e){if(!ze.includes(e))return i[e];let t=we[e];return t||(t=we[e]=function(...a){te.set(this,De.get(this)[e](...a))}),t}};async function*Ge(...i){let e=this;if(e instanceof IDBCursor||(e=await e.openCursor(...i)),!e)return;e=e;const t=new Proxy(e,je);for(De.set(t,e),U.set(t,ee(e));e;)yield t,e=await(te.get(t)||e.continue()),te.delete(t)}function ge(i,e){return e===Symbol.asyncIterator&&Q(i,[IDBIndex,IDBObjectStore,IDBCursor])||e==="iterate"&&Q(i,[IDBIndex,IDBObjectStore])}xe(i=>({...i,get(e,t,a){return ge(e,t)?Ge:i.get(e,t,a)},has(e,t){return ge(e,t)||i.has(e,t)}}));const Oe="LanGearDB",Ue=3;class qe{constructor(){this.db=null}async initDatabase(){try{this.db=await Fe(Oe,Ue,{upgrade(e,t,a,s){if(console.log(`Upgrading database from version ${t} to ${a}`),e.objectStoreNames.contains("decks")||e.createObjectStore("decks",{keyPath:"id",autoIncrement:!0}).createIndex("name","name",{unique:!1}),!e.objectStoreNames.contains("notes")){const n=e.createObjectStore("notes",{keyPath:"id",autoIncrement:!0});n.createIndex("deckId","deckId",{unique:!1}),n.createIndex("noteType","noteType",{unique:!1}),n.createIndex("tags","tags",{unique:!1,multiEntry:!0})}if(e.objectStoreNames.contains("cards")){if(t<2){const n=s.objectStore("cards");n.indexNames.contains("deckId")||n.createIndex("deckId","deckId",{unique:!1}),n.indexNames.contains("deckId-due")||n.createIndex("deckId-due",["deckId","due"],{unique:!1})}}else{const n=e.createObjectStore("cards",{keyPath:"id",autoIncrement:!0});n.createIndex("noteId","noteId",{unique:!1}),n.createIndex("deckId","deckId",{unique:!1}),n.createIndex("due","due",{unique:!1}),n.createIndex("state","state",{unique:!1}),n.createIndex("deckId-due",["deckId","due"],{unique:!1})}if(t<3&&s.objectStore("cards").openCursor().then(function d(o){if(o){const r=o.value;r.learningStep===void 0&&(r.learningStep=0,o.update(r)),o.continue().then(d)}}),!e.objectStoreNames.contains("reviewLogs")){const n=e.createObjectStore("reviewLogs",{keyPath:"id",autoIncrement:!0});n.createIndex("cardId","cardId",{unique:!1}),n.createIndex("reviewTime","reviewTime",{unique:!1})}e.objectStoreNames.contains("audioStore")||e.createObjectStore("audioStore",{keyPath:"id"}).createIndex("createdAt","createdAt",{unique:!1})}}),console.log("Database initialized successfully")}catch(e){throw console.error("Failed to initialize database:",e),e}}ensureDatabase(){if(!this.db)throw new Error("Database not initialized. Call initDatabase() first.");return this.db}async createDeck(e){const t=this.ensureDatabase(),a=new Date,s={...e,fsrsConfig:{...me,...e.fsrsConfig},createdAt:a,updatedAt:a},n=await t.add("decks",s);return{...s,id:n}}async getAllDecks(){return(await this.ensureDatabase().getAll("decks")).map(a=>({...a,createdAt:typeof a.createdAt=="string"?new Date(a.createdAt):a.createdAt,updatedAt:typeof a.updatedAt=="string"?new Date(a.updatedAt):a.updatedAt}))}async getDeckById(e){const a=await this.ensureDatabase().get("decks",e);return a?{...a,createdAt:typeof a.createdAt=="string"?new Date(a.createdAt):a.createdAt,updatedAt:typeof a.updatedAt=="string"?new Date(a.updatedAt):a.updatedAt}:void 0}async updateDeck(e,t){const a=this.ensureDatabase(),s=await a.get("decks",e);if(!s)throw new Error(`Deck with id ${e} not found`);const n={...s,...t,updatedAt:new Date};return await a.put("decks",n),n}async deleteDeck(e){const a=this.ensureDatabase().transaction(["decks","notes","cards","reviewLogs"],"readwrite");if(!await a.objectStore("decks").get(e))throw new Error(`Deck with id ${e} not found`);const d=(await a.objectStore("notes").index("deckId").getAll(e)).map(o=>o.id);for(const o of d){const r=await a.objectStore("cards").index("noteId").getAll(o),c=r.map(u=>u.id);for(const u of c){const l=await a.objectStore("reviewLogs").index("cardId").getAll(u);for(const f of l)await a.objectStore("reviewLogs").delete(f.id)}for(const u of r)await a.objectStore("cards").delete(u.id);await a.objectStore("notes").delete(o)}await a.objectStore("decks").delete(e),await a.done}async createNote(e){const t=this.ensureDatabase(),a=new Date;try{const{id:s,createdAt:n,updatedAt:d,...o}=e,r={...o,createdAt:a,updatedAt:a};console.log("Creating note with clean data:",{...r,id:"[auto-generated]"});const c=await t.add("notes",r),u={...r,id:c};return console.log("Note created successfully with ID:",c),u}catch(s){throw console.error("Failed to create note:",s),s instanceof Error&&s.name==="ConstraintError"?new Error("Note creation failed: Duplicate key conflict. This may indicate database corruption or concurrent operations."):s}}async getNotesByDeckId(e){return(await this.ensureDatabase().getAllFromIndex("notes","deckId",e)).map(s=>this.convertDatesInNote(s))}async getNoteById(e){const a=await this.ensureDatabase().get("notes",e);return a?this.convertDatesInNote(a):void 0}async updateNote(e,t){const a=this.ensureDatabase(),s=await a.get("notes",e);if(!s)throw new Error(`Note with id ${e} not found`);const n={...s,...t,updatedAt:new Date};return await a.put("notes",n),n}async deleteNote(e){const a=(await this.ensureDatabase()).transaction(["notes","cards","reviewLogs"],"readwrite"),s=await a.objectStore("cards").index("noteId").getAll(e);for(const n of s){const d=await a.objectStore("reviewLogs").index("cardId").getAll(n.id);for(const o of d)await a.objectStore("reviewLogs").delete(o.id);await a.objectStore("cards").delete(n.id)}await a.objectStore("notes").delete(e),await a.done}async bulkCreateNotes(e){const a=(await this.ensureDatabase()).transaction("notes","readwrite"),s=a.objectStore("notes"),n=[];for(const d of e){const o=await s.add(d);n.push({...d,id:o})}return await a.done,n}async createCardsForNote(e){const t=this.ensureDatabase(),a=[],s=new Date;switch(console.log("Creating cards for note:",e.id,"type:",e.noteType),e.noteType){case"CtoE":a.push({noteId:e.id,deckId:e.deckId,cardType:"CtoE",state:"New",due:s,stability:0,difficulty:0,elapsedDays:0,scheduledDays:0,reps:0,lapses:0,learningStep:0,createdAt:s,updatedAt:s});break;case"Retranslate":a.push({noteId:e.id,deckId:e.deckId,cardType:"Retranslate",state:"New",due:s,stability:0,difficulty:0,elapsedDays:0,scheduledDays:0,reps:0,lapses:0,learningStep:0,createdAt:s,updatedAt:s});break;default:throw new Error(`Unsupported note type: ${e.noteType}`)}try{const n=[];for(const d of a){console.log("Adding card to database:",{...d,id:"[auto-generated]"});const o=await t.add("cards",d),r={...d,id:o};n.push(r),console.log("Card created successfully with ID:",o)}return console.log("All cards created successfully for note:",e.id,"total cards:",n.length),n}catch(n){throw console.error("Failed to create cards for note:",e.id,n),n instanceof Error&&n.name==="ConstraintError"?new Error(`Card creation failed for note ${e.id}: Auto-increment key conflict. This may indicate database corruption.`):n}}async getDueCards(e,t,a,s){const n=this.ensureDatabase(),d=new Date;let o;if(e){const u=n.transaction("cards","readonly").store.index("deckId-due"),l=IDBKeyRange.bound([e,new Date(0)],[e,d]);o=await u.getAll(l)}else o=await n.getAll("cards");const r=o.map(c=>this.convertDatesInCard(c)).filter(c=>c.due<=d);return r.sort((c,u)=>c.due.getTime()-u.due.getTime()),a!==void 0||s!==void 0?this.applyDailyLimits(r,a,s):t?r.slice(0,t):r}async applyDailyLimits(e,t,a){const s=await this.getTodayReviewCounts(),n=[];let d=0,o=0;for(const r of e){const c=r.state==="New",u=r.state==="Review"||r.state==="Learning"||r.state==="Relearning";if(c&&t!==void 0){if(s.newCards+d>=t)continue;d++}if(u&&a!==void 0){if(s.reviewCards+o>=a)continue;o++}n.push(r)}return n}async getTodayReviewCounts(){const e=this.ensureDatabase(),t=new Date,a=new Date(t.getFullYear(),t.getMonth(),t.getDate()),s=new Date(t.getFullYear(),t.getMonth(),t.getDate()+1),d=e.transaction("reviewLogs","readonly").store.index("reviewTime"),o=IDBKeyRange.bound(a,s,!1,!0),r=await d.getAll(o);let c=0,u=0;for(const l of r)l.stateBefore==="New"?c++:u++;return{newCards:c,reviewCards:u}}async getCardsByDeckId(e){return(await this.ensureDatabase().getAllFromIndex("cards","deckId",e)).map(s=>this.convertDatesInCard(s))}async getCardById(e){const a=await this.ensureDatabase().get("cards",e);return a?this.convertDatesInCard(a):void 0}async updateCard(e,t){const a=this.ensureDatabase(),s=await this.getCardById(e);if(!s)throw new Error(`Card with id ${e} not found`);const n={...s,...t,updatedAt:new Date};return await a.put("cards",n),n}async resetCardProgress(e){const t=this.ensureDatabase(),a=await this.getCardById(e);if(!a)throw new Error(`Card with id ${e} not found`);const s={...a,state:"New",due:new Date,stability:0,difficulty:0,elapsedDays:0,scheduledDays:0,reps:0,lapses:0,lastReview:void 0,updatedAt:new Date};await t.put("cards",s);const n=t.transaction(["reviewLogs"],"readwrite"),o=n.objectStore("reviewLogs").index("cardId");for await(const r of o.iterate(e))await r.delete();await n.done}async resetCardsInDeck(e){const t=this.ensureDatabase();let a=0;try{const s=t.transaction(["cards","reviewLogs"],"readwrite"),n=s.objectStore("cards"),d=s.objectStore("reviewLogs");let o;e===null?o=await n.getAll():o=await n.index("deckId").getAll(e),console.log(`Resetting ${o.length} cards in deck ${e||"all decks"}`);for(const r of o){const c={...r,state:"New",due:new Date,stability:0,difficulty:0,elapsedDays:0,scheduledDays:0,reps:0,lapses:0,lastReview:void 0,updatedAt:new Date};await n.put(c),a++;const u=d.index("cardId");for await(const l of u.iterate(r.id))await l.delete()}return await s.done,console.log(`Successfully reset ${a} cards`),a}catch(s){throw console.error("Error resetting cards in deck:",s),new Error(`Failed to reset cards: ${s instanceof Error?s.message:"Unknown error"}`)}}async addReviewLog(e){const a=await this.ensureDatabase().add("reviewLogs",e);return{...e,id:a}}async getReviewLogsByCardId(e){return(await this.ensureDatabase().getAllFromIndex("reviewLogs","cardId",e)).map(s=>this.convertDatesInReviewLog(s))}async addAudioClip(e,t="audio/mp3",a){const s=this.ensureDatabase(),n=crypto.randomUUID(),d={id:n,audioData:e,mimeType:t,duration:a,createdAt:new Date};return await s.put("audioStore",d),n}async getAudioClip(e){const a=await this.ensureDatabase().get("audioStore",e);if(a)return{...a,createdAt:typeof a.createdAt=="string"?new Date(a.createdAt):a.createdAt}}async deleteAudioClip(e){await this.ensureDatabase().delete("audioStore",e)}async getAllAudioClips(){return(await this.ensureDatabase().getAll("audioStore")).map(a=>({...a,createdAt:typeof a.createdAt=="string"?new Date(a.createdAt):a.createdAt}))}async getDeckStatistics(e){const t=this.ensureDatabase(),a=await t.getAllFromIndex("notes","deckId",e),s=await t.getAllFromIndex("cards","deckId",e),n=a.map(w=>this.convertDatesInNote(w)),d=s.map(w=>this.convertDatesInCard(w)),o=n.length;let r=d.length,c=0,u=0,l=0,f=0;const h=new Date;for(const w of d){switch(w.state){case"New":c++;break;case"Learning":u++;break;case"Review":l++;break}w.due<=h&&f++}return{totalCards:r,newCards:c,learningCards:u,reviewCards:l,dueCards:f,totalNotes:o}}convertDatesInCard(e){return{...e,due:typeof e.due=="string"?new Date(e.due):e.due,createdAt:typeof e.createdAt=="string"?new Date(e.createdAt):e.createdAt,updatedAt:typeof e.updatedAt=="string"?new Date(e.updatedAt):e.updatedAt}}convertDatesInNote(e){return{...e,createdAt:typeof e.createdAt=="string"?new Date(e.createdAt):e.createdAt,updatedAt:typeof e.updatedAt=="string"?new Date(e.updatedAt):e.updatedAt}}convertDatesInReviewLog(e){return{...e,reviewTime:typeof e.reviewTime=="string"?new Date(e.reviewTime):e.reviewTime}}async validateDatabaseIntegrity(){const e=this.ensureDatabase(),t=[];let a=0;try{const s=await e.getAll("cards"),n=await e.getAll("notes"),d=new Set(n.map(w=>w.id)),o=s.filter(w=>!d.has(w.noteId));o.length>0&&(t.push(`Found ${o.length} orphaned cards without corresponding notes`),a+=o.length);const r=await e.getAll("reviewLogs"),c=new Set(s.map(w=>w.id)),u=r.filter(w=>!c.has(w.cardId));u.length>0&&(t.push(`Found ${u.length} orphaned review logs without corresponding cards`),a+=u.length);const l=await e.getAll("decks"),f=new Set(l.map(w=>w.id)),h=n.filter(w=>!f.has(w.deckId));return h.length>0&&(t.push(`Found ${h.length} orphaned notes without corresponding decks`),a+=h.length),console.log("Database integrity check completed:",{isValid:t.length===0,issues:t,orphanedRecords:a}),{isValid:t.length===0,issues:t,orphanedRecords:a}}catch(s){return console.error("Database integrity validation failed:",s),{isValid:!1,issues:[`Validation failed: ${s instanceof Error?s.message:"Unknown error"}`],orphanedRecords:0}}}async clearAllData(){const t=this.ensureDatabase().transaction(["decks","notes","cards","reviewLogs","audioStore"],"readwrite");await t.objectStore("reviewLogs").clear(),await t.objectStore("cards").clear(),await t.objectStore("notes").clear(),await t.objectStore("decks").clear(),await t.objectStore("audioStore").clear(),await t.done}close(){this.db&&(this.db.close(),this.db=null)}}const y=new qe;var re={exports:{}};re.exports;(function(i){(function(e,t,a){function s(r){var c=this,u=o();c.next=function(){var l=2091639*c.s0+c.c*23283064365386963e-26;return c.s0=c.s1,c.s1=c.s2,c.s2=l-(c.c=l|0)},c.c=1,c.s0=u(" "),c.s1=u(" "),c.s2=u(" "),c.s0-=u(r),c.s0<0&&(c.s0+=1),c.s1-=u(r),c.s1<0&&(c.s1+=1),c.s2-=u(r),c.s2<0&&(c.s2+=1),u=null}function n(r,c){return c.c=r.c,c.s0=r.s0,c.s1=r.s1,c.s2=r.s2,c}function d(r,c){var u=new s(r),l=c&&c.state,f=u.next;return f.int32=function(){return u.next()*4294967296|0},f.double=function(){return f()+(f()*2097152|0)*11102230246251565e-32},f.quick=f,l&&(typeof l=="object"&&n(l,u),f.state=function(){return n(u,{})}),f}function o(){var r=4022871197,c=function(u){u=String(u);for(var l=0;l<u.length;l++){r+=u.charCodeAt(l);var f=.02519603282416938*r;r=f>>>0,f-=r,f*=r,r=f>>>0,f-=r,r+=f*4294967296}return(r>>>0)*23283064365386963e-26};return c}t&&t.exports?t.exports=d:this.alea=d})(F,i)})(re);var Ke=re.exports,se={exports:{}};se.exports;(function(i){(function(e,t,a){function s(o){var r=this,c="";r.x=0,r.y=0,r.z=0,r.w=0,r.next=function(){var l=r.x^r.x<<11;return r.x=r.y,r.y=r.z,r.z=r.w,r.w^=r.w>>>19^l^l>>>8},o===(o|0)?r.x=o:c+=o;for(var u=0;u<c.length+64;u++)r.x^=c.charCodeAt(u)|0,r.next()}function n(o,r){return r.x=o.x,r.y=o.y,r.z=o.z,r.w=o.w,r}function d(o,r){var c=new s(o),u=r&&r.state,l=function(){return(c.next()>>>0)/4294967296};return l.double=function(){do var f=c.next()>>>11,h=(c.next()>>>0)/4294967296,w=(f+h)/(1<<21);while(w===0);return w},l.int32=c.next,l.quick=l,u&&(typeof u=="object"&&n(u,c),l.state=function(){return n(c,{})}),l}t&&t.exports?t.exports=d:this.xor128=d})(F,i)})(se);var He=se.exports,ne={exports:{}};ne.exports;(function(i){(function(e,t,a){function s(o){var r=this,c="";r.next=function(){var l=r.x^r.x>>>2;return r.x=r.y,r.y=r.z,r.z=r.w,r.w=r.v,(r.d=r.d+362437|0)+(r.v=r.v^r.v<<4^(l^l<<1))|0},r.x=0,r.y=0,r.z=0,r.w=0,r.v=0,o===(o|0)?r.x=o:c+=o;for(var u=0;u<c.length+64;u++)r.x^=c.charCodeAt(u)|0,u==c.length&&(r.d=r.x<<10^r.x>>>4),r.next()}function n(o,r){return r.x=o.x,r.y=o.y,r.z=o.z,r.w=o.w,r.v=o.v,r.d=o.d,r}function d(o,r){var c=new s(o),u=r&&r.state,l=function(){return(c.next()>>>0)/4294967296};return l.double=function(){do var f=c.next()>>>11,h=(c.next()>>>0)/4294967296,w=(f+h)/(1<<21);while(w===0);return w},l.int32=c.next,l.quick=l,u&&(typeof u=="object"&&n(u,c),l.state=function(){return n(c,{})}),l}t&&t.exports?t.exports=d:this.xorwow=d})(F,i)})(ne);var Ve=ne.exports,ie={exports:{}};ie.exports;(function(i){(function(e,t,a){function s(o){var r=this;r.next=function(){var u=r.x,l=r.i,f,h;return f=u[l],f^=f>>>7,h=f^f<<24,f=u[l+1&7],h^=f^f>>>10,f=u[l+3&7],h^=f^f>>>3,f=u[l+4&7],h^=f^f<<7,f=u[l+7&7],f=f^f<<13,h^=f^f<<9,u[l]=h,r.i=l+1&7,h};function c(u,l){var f,h=[];if(l===(l|0))h[0]=l;else for(l=""+l,f=0;f<l.length;++f)h[f&7]=h[f&7]<<15^l.charCodeAt(f)+h[f+1&7]<<13;for(;h.length<8;)h.push(0);for(f=0;f<8&&h[f]===0;++f);for(f==8?h[7]=-1:h[f],u.x=h,u.i=0,f=256;f>0;--f)u.next()}c(r,o)}function n(o,r){return r.x=o.x.slice(),r.i=o.i,r}function d(o,r){o==null&&(o=+new Date);var c=new s(o),u=r&&r.state,l=function(){return(c.next()>>>0)/4294967296};return l.double=function(){do var f=c.next()>>>11,h=(c.next()>>>0)/4294967296,w=(f+h)/(1<<21);while(w===0);return w},l.int32=c.next,l.quick=l,u&&(u.x&&n(u,c),l.state=function(){return n(c,{})}),l}t&&t.exports?t.exports=d:this.xorshift7=d})(F,i)})(ie);var Xe=ie.exports,oe={exports:{}};oe.exports;(function(i){(function(e,t,a){function s(o){var r=this;r.next=function(){var u=r.w,l=r.X,f=r.i,h,w;return r.w=u=u+1640531527|0,w=l[f+34&127],h=l[f=f+1&127],w^=w<<13,h^=h<<17,w^=w>>>15,h^=h>>>12,w=l[f]=w^h,r.i=f,w+(u^u>>>16)|0};function c(u,l){var f,h,w,_,k,E=[],P=128;for(l===(l|0)?(h=l,l=null):(l=l+"\0",h=0,P=Math.max(P,l.length)),w=0,_=-32;_<P;++_)l&&(h^=l.charCodeAt((_+32)%l.length)),_===0&&(k=h),h^=h<<10,h^=h>>>15,h^=h<<4,h^=h>>>13,_>=0&&(k=k+1640531527|0,f=E[_&127]^=h+k,w=f==0?w+1:0);for(w>=128&&(E[(l&&l.length||0)&127]=-1),w=127,_=4*128;_>0;--_)h=E[w+34&127],f=E[w=w+1&127],h^=h<<13,f^=f<<17,h^=h>>>15,f^=f>>>12,E[w]=h^f;u.w=k,u.X=E,u.i=w}c(r,o)}function n(o,r){return r.i=o.i,r.w=o.w,r.X=o.X.slice(),r}function d(o,r){o==null&&(o=+new Date);var c=new s(o),u=r&&r.state,l=function(){return(c.next()>>>0)/4294967296};return l.double=function(){do var f=c.next()>>>11,h=(c.next()>>>0)/4294967296,w=(f+h)/(1<<21);while(w===0);return w},l.int32=c.next,l.quick=l,u&&(u.X&&n(u,c),l.state=function(){return n(c,{})}),l}t&&t.exports?t.exports=d:this.xor4096=d})(F,i)})(oe);var We=oe.exports,ce={exports:{}};ce.exports;(function(i){(function(e,t,a){function s(o){var r=this,c="";r.next=function(){var l=r.b,f=r.c,h=r.d,w=r.a;return l=l<<25^l>>>7^f,f=f-h|0,h=h<<24^h>>>8^w,w=w-l|0,r.b=l=l<<20^l>>>12^f,r.c=f=f-h|0,r.d=h<<16^f>>>16^w,r.a=w-l|0},r.a=0,r.b=0,r.c=-1640531527,r.d=1367130551,o===Math.floor(o)?(r.a=o/4294967296|0,r.b=o|0):c+=o;for(var u=0;u<c.length+20;u++)r.b^=c.charCodeAt(u)|0,r.next()}function n(o,r){return r.a=o.a,r.b=o.b,r.c=o.c,r.d=o.d,r}function d(o,r){var c=new s(o),u=r&&r.state,l=function(){return(c.next()>>>0)/4294967296};return l.double=function(){do var f=c.next()>>>11,h=(c.next()>>>0)/4294967296,w=(f+h)/(1<<21);while(w===0);return w},l.int32=c.next,l.quick=l,u&&(typeof u=="object"&&n(u,c),l.state=function(){return n(c,{})}),l}t&&t.exports?t.exports=d:this.tychei=d})(F,i)})(ce);var Ye=ce.exports,Se={exports:{}};const Qe={},Ze=Object.freeze(Object.defineProperty({__proto__:null,default:Qe},Symbol.toStringTag,{value:"Module"})),Je=Ae(Ze);(function(i){(function(e,t,a){var s=256,n=6,d=52,o="random",r=a.pow(s,n),c=a.pow(2,d),u=c*2,l=s-1,f;function h(m,g,S){var D=[];g=g==!0?{entropy:!0}:g||{};var x=E(k(g.entropy?[m,z(t)]:m??P(),3),D),b=new w(D),C=function(){for(var A=b.g(n),T=r,R=0;A<c;)A=(A+R)*s,T*=s,R=b.g(1);for(;A>=u;)A/=2,T/=2,R>>>=1;return(A+R)/T};return C.int32=function(){return b.g(4)|0},C.quick=function(){return b.g(4)/4294967296},C.double=C,E(z(b.S),t),(g.pass||S||function(A,T,R,L){return L&&(L.S&&_(L,b),A.state=function(){return _(b,{})}),R?(a[o]=A,T):A})(C,x,"global"in g?g.global:this==a,g.state)}function w(m){var g,S=m.length,D=this,x=0,b=D.i=D.j=0,C=D.S=[];for(S||(m=[S++]);x<s;)C[x]=x++;for(x=0;x<s;x++)C[x]=C[b=l&b+m[x%S]+(g=C[x])],C[b]=g;(D.g=function(A){for(var T,R=0,L=D.i,O=D.j,j=D.S;A--;)T=j[L=l&L+1],R=R*s+j[l&(j[L]=j[O=l&O+T])+(j[O]=T)];return D.i=L,D.j=O,R})(s)}function _(m,g){return g.i=m.i,g.j=m.j,g.S=m.S.slice(),g}function k(m,g){var S=[],D=typeof m,x;if(g&&D=="object")for(x in m)try{S.push(k(m[x],g-1))}catch{}return S.length?S:D=="string"?m:m+"\0"}function E(m,g){for(var S=m+"",D,x=0;x<S.length;)g[l&x]=l&(D^=g[l&x]*19)+S.charCodeAt(x++);return z(g)}function P(){try{var m;return f&&(m=f.randomBytes)?m=m(s):(m=new Uint8Array(s),(e.crypto||e.msCrypto).getRandomValues(m)),z(m)}catch{var g=e.navigator,S=g&&g.plugins;return[+new Date,e,S,e.screen,z(t)]}}function z(m){return String.fromCharCode.apply(0,m)}if(E(a.random(),t),i.exports){i.exports=h;try{f=Je}catch{}}else a["seed"+o]=h})(typeof self<"u"?self:F,[],Math)})(Se);var et=Se.exports,tt=Ke,at=He,rt=Ve,st=Xe,nt=We,it=Ye,$=et;$.alea=tt;$.xor128=at;$.xorwow=rt;$.xorshift7=st;$.xor4096=nt;$.tychei=it;var ot=$;const ct=Ie(ot);var p=(i=>(i[i.New=0]="New",i[i.Learning=1]="Learning",i[i.Review=2]="Review",i[i.Relearning=3]="Relearning",i))(p||{}),v=(i=>(i[i.Manual=0]="Manual",i[i.Again=1]="Again",i[i.Hard=2]="Hard",i[i.Good=3]="Good",i[i.Easy=4]="Easy",i))(v||{});Date.prototype.scheduler=function(i,e){return B(this,i,e)},Date.prototype.diff=function(i,e){return dt(this,i,e)},Date.prototype.format=function(){return lt(this)},Date.prototype.dueFormat=function(i,e,t){return ut(this,i,e,t)};function B(i,e,t){return new Date(t?I(i).getTime()+e*24*60*60*1e3:I(i).getTime()+e*60*1e3)}function dt(i,e,t){if(!i||!e)throw new Error("Invalid date");const a=I(i).getTime()-I(e).getTime();let s=0;switch(t){case"days":s=Math.floor(a/(24*60*60*1e3));break;case"minutes":s=Math.floor(a/(60*1e3));break}return s}function lt(i){const e=I(i),t=e.getFullYear(),a=e.getMonth()+1,s=e.getDate(),n=e.getHours(),d=e.getMinutes(),o=e.getSeconds();return`${t}-${G(a)}-${G(s)} ${G(n)}:${G(d)}:${G(o)}`}function G(i){return i<10?`0${i}`:`${i}`}const X=[60,60,24,31,12],W=["second","min","hour","day","month","year"];function ut(i,e,t,a=W){i=I(i),e=I(e),a.length!==W.length&&(a=W);let s=i.getTime()-e.getTime(),n;for(s/=1e3,n=0;n<X.length&&!(s<X[n]);n++)s/=X[n];return`${Math.floor(s)}${t?a[n]:""}`}function I(i){if(typeof i=="object"&&i instanceof Date)return i;if(typeof i=="string"){const e=Date.parse(i);if(isNaN(e))throw new Error(`Invalid date:[${i}]`);return new Date(e)}else if(typeof i=="number")return new Date(i);throw new Error(`Invalid date:[${i}]`)}function Y(i){if(typeof i=="string"){const e=i.charAt(0).toUpperCase(),t=i.slice(1).toLowerCase(),a=p[`${e}${t}`];if(a===void 0)throw new Error(`Invalid state:[${i}]`);return a}else if(typeof i=="number")return i;throw new Error(`Invalid state:[${i}]`)}function ft(i){if(typeof i=="string"){const e=i.charAt(0).toUpperCase(),t=i.slice(1).toLowerCase(),a=v[`${e}${t}`];if(a===void 0)throw new Error(`Invalid rating:[${i}]`);return a}else if(typeof i=="number")return i;throw new Error(`Invalid rating:[${i}]`)}v.Again,v.Hard,v.Good,v.Easy;const ht=[{start:2.5,end:7,factor:.15},{start:7,end:20,factor:.1},{start:20,end:1/0,factor:.05}];function wt(i,e,t){let a=1;for(const d of ht)a+=d.factor*Math.max(Math.min(i,d.end)-d.start,0);i=Math.min(i,t);let s=Math.max(2,Math.round(i-a));const n=Math.min(Math.round(i+a),t);return i>e&&(s=Math.max(s,e+1)),s=Math.min(s,n),{min_ivl:s,max_ivl:n}}class gt{again;hard;good;easy;last_review;last_elapsed_days;copy(e){return{...e}}constructor(e,t){this.last_review=e.last_review||e.due,this.last_elapsed_days=e.elapsed_days,e.elapsed_days=e.state===p.New?0:t.diff(e.last_review,"days"),e.last_review=t,e.reps+=1,this.again=this.copy(e),this.hard=this.copy(e),this.good=this.copy(e),this.easy=this.copy(e)}update_state(e){return e===p.New?(this.again.state=p.Learning,this.hard.state=p.Learning,this.good.state=p.Learning,this.easy.state=p.Review):e===p.Learning||e===p.Relearning?(this.again.state=e,this.hard.state=e,this.good.state=p.Review,this.easy.state=p.Review):e===p.Review&&(this.again.state=p.Relearning,this.hard.state=p.Review,this.good.state=p.Review,this.easy.state=p.Review,this.again.lapses+=1),this}schedule(e,t,a,s){return this.again.scheduled_days=0,this.hard.scheduled_days=t,this.good.scheduled_days=a,this.easy.scheduled_days=s,this.again.due=B(e,5),this.hard.due=t>0?B(e,t,!0):B(e,10),this.good.due=B(e,a,!0),this.easy.due=B(e,s,!0),this}record_log(e,t){return{[v.Again]:{card:this.again,log:{rating:v.Again,state:e.state,due:this.last_review,stability:e.stability,difficulty:e.difficulty,elapsed_days:e.elapsed_days,last_elapsed_days:this.last_elapsed_days,scheduled_days:e.scheduled_days,review:t}},[v.Hard]:{card:this.hard,log:{rating:v.Hard,state:e.state,due:this.last_review,stability:e.stability,difficulty:e.difficulty,elapsed_days:e.elapsed_days,last_elapsed_days:this.last_elapsed_days,scheduled_days:e.scheduled_days,review:t}},[v.Good]:{card:this.good,log:{rating:v.Good,state:e.state,due:this.last_review,stability:e.stability,difficulty:e.difficulty,elapsed_days:e.elapsed_days,last_elapsed_days:this.last_elapsed_days,scheduled_days:e.scheduled_days,review:t}},[v.Easy]:{card:this.easy,log:{rating:v.Easy,state:e.state,due:this.last_review,stability:e.stability,difficulty:e.difficulty,elapsed_days:e.elapsed_days,last_elapsed_days:this.last_elapsed_days,scheduled_days:e.scheduled_days,review:t}}}}}const yt=.9,pt=36500,vt=[.5701,1.4436,4.1386,10.9355,5.1443,1.2006,.8627,.0362,1.629,.1342,1.0166,2.1174,.0839,.3204,1.4676,.219,2.8237],mt=!1,ae=i=>({request_retention:i?.request_retention||yt,maximum_interval:i?.maximum_interval||pt,w:i?.w||vt,enable_fuzz:i?.enable_fuzz||mt}),ye=-.5,pe=19/81;class xt{param;intervalModifier;seed;constructor(e){this.param=new Proxy(ae(e),this.params_handler_proxy()),this.intervalModifier=this.calculate_interval_modifier(this.param.request_retention)}get interval_modifier(){return this.intervalModifier}calculate_interval_modifier(e){if(e<=0||e>1)throw new Error("Requested retention rate should be in the range (0,1]");return+((Math.pow(e,1/ye)-1)/pe).toFixed(8)}get parameters(){return this.param}set parameters(e){this.update_parameters(e)}params_handler_proxy(){const e=this;return{set:function(t,a,s){return a==="request_retention"&&Number.isFinite(s)&&(e.intervalModifier=e.calculate_interval_modifier(Number(s))),t[a]=s,!0}}}update_parameters(e){const t=ae(e);for(const a in t)if(a in this.param){const s=a;this.param[s]=t[s]}}init_ds(e){e.again.difficulty=this.init_difficulty(v.Again),e.again.stability=this.init_stability(v.Again),e.hard.difficulty=this.init_difficulty(v.Hard),e.hard.stability=this.init_stability(v.Hard),e.good.difficulty=this.init_difficulty(v.Good),e.good.stability=this.init_stability(v.Good),e.easy.difficulty=this.init_difficulty(v.Easy),e.easy.stability=this.init_stability(v.Easy)}next_ds(e,t,a,s){e.again.difficulty=this.next_difficulty(t,v.Again),e.again.stability=this.next_forget_stability(t,a,s),e.hard.difficulty=this.next_difficulty(t,v.Hard),e.hard.stability=this.next_recall_stability(t,a,s,v.Hard),e.good.difficulty=this.next_difficulty(t,v.Good),e.good.stability=this.next_recall_stability(t,a,s,v.Good),e.easy.difficulty=this.next_difficulty(t,v.Easy),e.easy.stability=this.next_recall_stability(t,a,s,v.Easy)}init_stability(e){return Math.max(this.param.w[e-1],.1)}init_difficulty(e){return+Math.min(Math.max(this.param.w[4]-(e-3)*this.param.w[5],1),10).toFixed(8)}apply_fuzz(e,t,a){if(!a||e<2.5)return Math.round(e);const s=ct(this.seed)(),{min_ivl:n,max_ivl:d}=wt(e,t,this.param.maximum_interval);return Math.floor(s*(d-n+1)+n)}next_interval(e,t,a=this.param.enable_fuzz){const s=Math.min(Math.max(1,Math.round(e*this.intervalModifier)),this.param.maximum_interval);return this.apply_fuzz(s,t,a)}next_difficulty(e,t){const a=e-this.param.w[6]*(t-3);return this.constrain_difficulty(this.mean_reversion(this.param.w[4],a))}constrain_difficulty(e){return Math.min(Math.max(+e.toFixed(8),1),10)}mean_reversion(e,t){return+(this.param.w[7]*e+(1-this.param.w[7])*t).toFixed(8)}next_recall_stability(e,t,a,s){const n=v.Hard===s?this.param.w[15]:1,d=v.Easy===s?this.param.w[16]:1;return+(t*(1+Math.exp(this.param.w[8])*(11-e)*Math.pow(t,-this.param.w[9])*(Math.exp((1-a)*this.param.w[10])-1)*n*d)).toFixed(8)}next_forget_stability(e,t,a){return+(this.param.w[11]*Math.pow(e,-this.param.w[12])*(Math.pow(t+1,this.param.w[13])-1)*Math.exp((1-a)*this.param.w[14])).toFixed(8)}forgetting_curve(e,t){return+Math.pow(1+pe*e/t,ye).toFixed(8)}}class Dt extends xt{constructor(e){super(e)}preProcessCard(e){return{...e,state:Y(e.state),due:I(e.due),last_review:e.last_review?I(e.last_review):void 0}}preProcessDate(e){return I(e)}preProcessLog(e){return{...e,due:I(e.due),rating:ft(e.rating),state:Y(e.state),review:I(e.review)}}repeat(e,t,a){const s=this.preProcessCard(e);t=this.preProcessDate(t);const n=new gt(s,t).update_state(s.state);this.seed=String(t.getTime())+String(s.reps);let d,o,r;const c=s.elapsed_days;switch(s.state){case p.New:this.init_ds(n),n.again.due=t.scheduler(1),n.hard.due=t.scheduler(5),n.good.due=t.scheduler(10),d=this.next_interval(n.easy.stability,c),n.easy.scheduled_days=d,n.easy.due=t.scheduler(d,!0);break;case p.Learning:case p.Relearning:r=0,o=this.next_interval(n.good.stability,c),d=Math.max(this.next_interval(n.easy.stability,c),o+1),n.schedule(t,r,o,d);break;case p.Review:{const l=s.difficulty,f=s.stability,h=this.forgetting_curve(c,f);this.next_ds(n,l,f,h),r=this.next_interval(n.hard.stability,c),o=this.next_interval(n.good.stability,c),r=Math.min(r,o),o=Math.max(o,r+1),d=Math.max(this.next_interval(n.easy.stability,c),o+1),n.schedule(t,r,o,d);break}}const u=n.record_log(s,t);return a&&typeof a=="function"?a(u):u}get_retrievability(e,t,a=!0){const s=this.preProcessCard(e);if(t=this.preProcessDate(t),s.state!==p.Review)return;const n=Math.max(t.diff(s.last_review,"days"),0),d=this.forgetting_curve(n,Math.round(s.stability));return a?`${(d*100).toFixed(2)}%`:d}rollback(e,t,a){const s=this.preProcessCard(e),n=this.preProcessLog(t);if(n.rating===v.Manual)throw new Error("Cannot rollback a manual rating");let d,o,r;switch(n.state){case p.New:d=n.due,o=void 0,r=0;break;case p.Learning:case p.Relearning:case p.Review:d=n.review,o=n.due,r=s.lapses-(n.rating===v.Again&&n.state===p.Review?1:0);break}const c={...s,due:d,stability:n.stability,difficulty:n.difficulty,elapsed_days:n.last_elapsed_days,scheduled_days:n.scheduled_days,reps:Math.max(0,s.reps-1),lapses:Math.max(0,r),state:n.state,last_review:o};return a&&typeof a=="function"?a(c):c}forget(e,t,a=!1,s){const n=this.preProcessCard(e);t=this.preProcessDate(t);const d=n.state===p.New?0:t.diff(n.last_review,"days"),o={rating:v.Manual,state:n.state,due:n.due,stability:n.stability,difficulty:n.difficulty,elapsed_days:0,last_elapsed_days:n.elapsed_days,scheduled_days:d,review:t},r={card:{...n,due:t,stability:0,difficulty:0,elapsed_days:0,scheduled_days:0,reps:a?0:n.reps,lapses:a?0:n.lapses,state:p.New,last_review:n.last_review},log:o};return s&&typeof s=="function"?s(r):r}reschedule(e,t={}){if(!Array.isArray(e))throw new Error("cards must be an array");const a=[];for(const s of e){if(Y(s.state)!==p.Review||!s.last_review)continue;const n=Math.floor(s.scheduled_days),d=this.next_interval(+s.stability.toFixed(2),Math.round(s.elapsed_days),t.enable_fuzz??!0);if(d===n||d===0)continue;const o={...s};o.scheduled_days=d;const r=B(o.last_review,d,!0);t.dateHandler&&typeof t.dateHandler=="function"?o.due=t.dateHandler(r):o.due=r,a.push(o)}return a}}class be{constructor(){this.userSettings={learningSteps:"1 10",relearningSteps:"10",dailyNewCardsLimit:20,dailyReviewLimit:200,enableTraditionalLearningSteps:!1},this.config={...me},this.fsrsInstance=this.createFSRSInstance(this.config),this.initializeUserSettings()}async initializeUserSettings(){try{this.userSettings=await _e(),Ce(e=>{this.userSettings={...this.userSettings,...e},console.log("FSRS service updated with new settings:",this.userSettings)})}catch(e){console.error("Failed to initialize user settings:",e)}}createFSRSInstance(e){const t=ae({request_retention:e.requestRetention,maximum_interval:e.maximumInterval,enable_fuzz:!0});return new Dt(t)}convertToFSRSCard(e){return{due:e.due,stability:e.stability,difficulty:e.difficulty,elapsed_days:e.elapsedDays,scheduled_days:e.scheduledDays,reps:e.reps,lapses:e.lapses,state:this.convertToFSRSState(e.state),last_review:e.lastReview||void 0}}convertToAppCard(e){return{due:e.due,stability:e.stability,difficulty:e.difficulty,elapsedDays:e.elapsed_days,scheduledDays:e.scheduled_days,reps:e.reps,lapses:e.lapses,state:this.convertFromFSRSState(e.state),lastReview:e.last_review}}convertToFSRSState(e){switch(e){case"New":return p.New;case"Learning":return p.Learning;case"Review":return p.Review;case"Relearning":return p.Relearning;default:return p.New}}convertFromFSRSState(e){switch(e){case p.New:return"New";case p.Learning:return"Learning";case p.Review:return"Review";case p.Relearning:return"Relearning";default:return"New"}}mapRatingToFSRS(e){switch(e){case"Again":return v.Again;case"Hard":return v.Hard;case"Good":return v.Good;case"Easy":return v.Easy;default:return v.Good}}async reviewCard(e,t){try{const a=await y.getCardById(e);if(!a)throw new Error(`Card with id ${e} not found`);const s=new Date;return this.userSettings.enableTraditionalLearningSteps?await this.handleTraditionalLearningSteps(a,t,s):await this.handleTaskDrivenLearning(a,t,s)}catch(a){return console.error("Error reviewing card:",a),{success:!1,error:a instanceof Error?a.message:"Unknown error"}}}async handleTaskDrivenLearning(e,t,a){if(e.state==="New"||e.state==="Relearning"){if(t==="Good"||t==="Easy")return await this.graduateCardToReview(e,t,a);{const s=await y.updateCard(e.id,{due:a,updatedAt:a});return await this.logReview(e,s,t,a),{success:!0,nextReview:s.due,interval:0}}}else if(e.state==="Review")if(t==="Again"){const s=await y.updateCard(e.id,{state:"Relearning",learningStep:0,due:a,lapses:e.lapses+1,updatedAt:a});return await this.logReview(e,s,t,a),{success:!0,nextReview:s.due,interval:0}}else return await this.applyFSRSScheduling(e,t,a);else return await this.applyFSRSScheduling(e,t,a)}async handleTraditionalLearningSteps(e,t,a){if(e.state==="New"||e.state==="Learning")return await this.handleLearningSteps(e,t,a,"learningSteps");if(e.state==="Relearning")return await this.handleLearningSteps(e,t,a,"relearningSteps");if(e.state==="Review")if(t==="Again"){const s=await y.updateCard(e.id,{state:"Relearning",learningStep:0,due:this.calculateStepDue(a,0,"relearningSteps"),lapses:e.lapses+1,updatedAt:a});return await this.logReview(e,s,t,a),{success:!0,nextReview:s.due,interval:0}}else return await this.applyFSRSScheduling(e,t,a);return await this.applyFSRSScheduling(e,t,a)}async handleLearningSteps(e,t,a,s){const n=s==="learningSteps"?this.userSettings.learningSteps:this.userSettings.relearningSteps,d=de(n);if(t==="Again"){const o=await y.updateCard(e.id,{learningStep:0,due:this.calculateStepDue(a,0,s),updatedAt:a});return await this.logReview(e,o,t,a),{success:!0,nextReview:o.due,interval:0}}else{if(t==="Easy")return await this.graduateCardToReview(e,t,a);if(t==="Good"||t==="Hard"){const r=(e.learningStep||0)+1;if(r>=d.length)return await this.graduateCardToReview(e,t,a);{const c=await y.updateCard(e.id,{state:s==="learningSteps"?"Learning":"Relearning",learningStep:r,due:this.calculateStepDue(a,r,s),updatedAt:a});return await this.logReview(e,c,t,a),{success:!0,nextReview:c.due,interval:0}}}}return await this.applyFSRSScheduling(e,t,a)}calculateStepDue(e,t,a){const s=a==="learningSteps"?this.userSettings.learningSteps:this.userSettings.relearningSteps,n=de(s);if(t>=n.length)return e;const d=n[t];return new Date(e.getTime()+d*60*1e3)}async graduateCardToReview(e,t,a){const s={due:a,stability:0,difficulty:0,elapsed_days:0,scheduled_days:0,reps:0,lapses:e.lapses,state:p.New,last_review:void 0},n=this.mapRatingToFSRS(t),o=this.fsrsInstance.repeat(s,a)[n],r=this.convertToAppCard(o.card),c=await y.updateCard(e.id,{...r,state:"Review",learningStep:1,reps:e.reps+1});return await this.logReview(e,c,t,a),{success:!0,nextReview:c.due,interval:c.scheduledDays}}async applyFSRSScheduling(e,t,a){const s=this.convertToFSRSCard(e),n=this.mapRatingToFSRS(t),o=this.fsrsInstance.repeat(s,a)[n],r=this.convertToAppCard(o.card),c=await y.updateCard(e.id,{...r,reps:e.reps+1});return await this.logReview(e,c,t,a),{success:!0,nextReview:c.due,interval:c.scheduledDays}}async logReview(e,t,a,s){await y.addReviewLog({cardId:e.id,reviewTime:s,rating:this.convertAppRatingToNumber(a),stateBefore:e.state,stateAfter:t.state,stabilityBefore:e.stability,stabilityAfter:t.stability,difficultyBefore:e.difficulty,difficultyAfter:t.difficulty,interval:t.scheduledDays,lastInterval:e.scheduledDays})}convertAppRatingToNumber(e){switch(e){case"Again":return 1;case"Hard":return 2;case"Good":return 3;case"Easy":return 4;default:return 3}}async getNextReviewDate(e,t){const a=this.convertToFSRSCard(e),s=this.mapRatingToFSRS(t);return this.fsrsInstance.repeat(a,new Date)[s].card.due}async predictRetention(e){const a=(new Date().getTime()-e.due.getTime())/(1e3*60*60*24);return e.stability>0?Math.exp(-a/e.stability):.9}async calculateLearningProgress(e){const t=e.length,a=e.filter(c=>c.state==="New").length,s=e.filter(c=>c.state==="Learning").length,n=e.filter(c=>c.state==="Review").length;let d=0,o=0;for(const c of e)if(c.state==="Review"&&c.stability>0){const u=await this.predictRetention(c);d+=u,o++}const r=o>0?d/o:.9;return{totalCards:t,newCards:a,learningCards:s,reviewCards:n,averageRetention:r,studyStreak:0}}async recommendStudySchedule(e){const t=new Date,a=e.filter(o=>o.due<=t).length,s=new Date(t);s.setDate(s.getDate()+1);const n=e.filter(o=>o.due>t&&o.due<=s).length,d=Math.max(20,Math.min(50,a+10));return{immediateReview:a,todayTotal:a,tomorrowTotal:n,recommendedDailyLimit:d}}updateConfig(e){if(e.requestRetention!==void 0&&(e.requestRetention<=0||e.requestRetention>1))throw new Error("Request retention must be between 0 and 1");if(e.maximumInterval!==void 0&&e.maximumInterval<0)throw new Error("Maximum interval must be non-negative");if(e.easyBonus!==void 0&&e.easyBonus<1)throw new Error("Easy bonus must be >= 1");if(e.hardFactor!==void 0&&e.hardFactor<=0)throw new Error("Hard factor must be positive");this.config={...this.config,...e},this.fsrsInstance=this.createFSRSInstance(this.config)}getConfig(){return{...this.config}}}new be;class St{async buildQueue(e,t=20){try{console.log(`SchedulerService: Building queue for deck ${e}, limit ${t}`);const a=await y.getDueCards(e||void 0,t);return console.log(`SchedulerService: Found ${a.length} due cards`),a}catch(a){throw console.error("SchedulerService: Error building queue:",a),new Error(`Failed to build review queue: ${a instanceof Error?a.message:"Unknown error"}`)}}async buildDailyQueue(e){const t=await this.buildQueue(e);return{cards:t,newCards:t.filter(a=>a.state==="New"),learningCards:t.filter(a=>a.state==="Learning"),reviewCards:t.filter(a=>a.state==="Review"),totalCount:t.length}}async getNewCards(e,t){if(e===null){const a=await y.getAllDecks(),s=[];for(const n of a){const d=await y.getCardsByDeckId(n.id);s.push(...d)}return s.filter(n=>n.state==="New").slice(0,t)}else return(await y.getCardsByDeckId(e)).filter(s=>s.state==="New").slice(0,t)}async getLearningCards(e){const t=new Date;if(e===null){const a=await y.getAllDecks(),s=[];for(const n of a){const d=await y.getCardsByDeckId(n.id);s.push(...d)}return s.filter(n=>n.state!=="Learning"?!1:n.due?new Date(n.due)<=t:!0)}else return(await y.getCardsByDeckId(e)).filter(s=>s.state!=="Learning"?!1:s.due?new Date(s.due)<=t:!0)}async getReviewCards(e,t){const a=new Date;if(e===null){const s=await y.getAllDecks(),n=[];for(const d of s){const o=await y.getCardsByDeckId(d.id);n.push(...o)}return n.filter(d=>d.state!=="Review"||!d.due?!1:new Date(d.due)<=a).slice(0,t)}else return(await y.getCardsByDeckId(e)).filter(n=>n.state!=="Review"||!n.due?!1:new Date(n.due)<=a).slice(0,t)}async resetCardsInDeck(e){try{console.log(`SchedulerService: Resetting cards in deck ${e||"all decks"}`);const t=await y.resetCardsInDeck(e);return console.log(`SchedulerService: Successfully reset ${t} cards`),t}catch(t){throw console.error("SchedulerService: Error resetting cards:",t),new Error(`Failed to reset cards: ${t instanceof Error?t.message:"Unknown error"}`)}}async getQueueStats(e){try{const t=new Date;let a;if(e===null){const o=await y.getAllDecks();a=[];for(const r of o){const c=await y.getCardsByDeckId(r.id);a.push(...c)}}else a=await y.getCardsByDeckId(e);const s=a.filter(o=>o.state==="New").length,n=a.filter(o=>o.state==="Learning"&&(!o.due||new Date(o.due)<=t)).length,d=a.filter(o=>o.state==="Review"&&o.due&&new Date(o.due)<=t).length;return{newCount:s,learningCount:n,reviewCount:d,totalCount:s+n+d}}catch(t){return console.error("SchedulerService: Error getting queue stats:",t),{newCount:0,learningCount:0,reviewCount:0,totalCount:0}}}}const ve=new St,N=new be;class bt{constructor(){this.initialized=!1}get isInitialized(){return this.initialized}async init(){if(!this.initialized)try{console.log("Initializing AnGear Background Service..."),await y.initDatabase(),await this.setupAlarms(),await this.initializeDefaultConfig(),this.initialized=!0,console.log("AnGear Background Service initialized successfully"),await this.updateBadge()}catch(e){throw console.error("Failed to initialize background service:",e),e}}async initializeWithRetry(e=3){if(this.initialized)return;let t;for(let s=1;s<=e;s++)try{if(console.log(`Initialization attempt ${s}/${e}`),await this.init(),this.initialized){console.log(`Initialization successful on attempt ${s}`);return}}catch(n){if(t=n instanceof Error?n:new Error(String(n)),console.error(`Initialization attempt ${s} failed:`,t.message),s<e){const d=s*1e3;console.log(`Waiting ${d}ms before retry...`),await new Promise(o=>setTimeout(o,d))}}const a=new Error(`Failed to initialize after ${e} attempts. Last error: ${t?.message||"Unknown error"}`);throw console.error("Critical initialization failure:",a.message),a}async setupAlarms(){await chrome.alarms.clearAll(),await chrome.alarms.create("daily-check",{delayInMinutes:1,periodInMinutes:60}),await chrome.alarms.create("health-check",{delayInMinutes:5,periodInMinutes:30}),console.log("Alarms set up successfully")}async initializeDefaultConfig(){console.log("Using default FSRS configuration")}async updateBadge(){try{const t=(await y.getDueCards()).length;t>0?(await chrome.action.setBadgeText({text:t>99?"99+":t.toString()}),await chrome.action.setBadgeBackgroundColor({color:"#E53E3E"})):await chrome.action.setBadgeText({text:""})}catch(e){console.error("Failed to update badge:",e)}}async handleAlarm(e){switch(e.name){case"daily-check":console.log("Running daily check..."),await this.updateBadge();break;default:console.log(`Unknown alarm: ${e.name}`)}}async handleMessage(e,t){try{switch(console.log(`Received message: ${e.type}`,e),this.initialized||(console.log("Service not initialized, attempting initialization..."),await this.initializeWithRetry()),e.type){case"CREATE_DECK":const a=await y.createDeck(e.payload);return await this.updateBadge(),{success:!0,data:a};case"GET_ALL_DECKS":return{success:!0,data:await y.getAllDecks()};case"GET_DECK_BY_ID":return{success:!0,data:await y.getDeckById(e.payload.id)};case"UPDATE_DECK":return await y.updateDeck(e.payload.id,e.payload.updates),{success:!0};case"DELETE_DECK":return await y.deleteDeck(e.payload.id),await this.updateBadge(),{success:!0};case"GET_DECK_STATS":return{success:!0,data:await y.getDeckStatistics(e.payload.deckId)};case"CREATE_NOTE":try{console.log("Creating note with payload:",e.payload);const g=await y.createNote(e.payload);return await y.createCardsForNote(g),await this.updateBadge(),console.log("Note and cards created successfully:",g.id),{success:!0,data:g}}catch(g){if(console.error("CREATE_NOTE operation failed:",g),g instanceof Error){if(g.message.includes("Duplicate key conflict"))return{success:!1,error:"Note creation failed due to database conflict. Please try again or restart the extension."};if(g.name==="ConstraintError"||g.message.includes("Key already exists"))return{success:!1,error:"Database constraint violation: A note with this identifier already exists. Please refresh the page and try again."}}throw g}case"GET_NOTES_BY_DECK":return{success:!0,data:await y.getNotesByDeckId(e.payload.deckId)};case"UPDATE_NOTE":return await y.updateNote(e.payload.id,e.payload.updates),{success:!0};case"DELETE_NOTE":return await y.deleteNote(e.payload.id),await this.updateBadge(),{success:!0};case"GET_NOTE_BY_ID":return{success:!0,data:await y.getNoteById(e.payload.id)};case"BULK_CREATE_NOTES":try{console.log("Bulk creating notes:",e.payload);const{deckId:g,notes:S}=e.payload,D=S.map(b=>({...b,deckId:g})),x=await y.bulkCreateNotes(D);return await this.updateBadge(),console.log(`Bulk created ${x.length} notes successfully`),{success:!0,data:x}}catch(g){throw console.error("BULK_CREATE_NOTES operation failed:",g),g}case"AI_PROCESS_TEXT":try{const{geminiService:g}=await K(async()=>{const{geminiService:b}=await import("../../geminiService-B9yebQZR.js");return{geminiService:b}},[]),{getSettings:S}=await K(async()=>{const{getSettings:b}=await import("../../settingsService-w9Z-Z5SK.js").then(C=>C.c);return{getSettings:b}},[]),D=await S();return D.geminiApiKey?{success:!0,data:await g.processTextForCards(e.payload.text,D.geminiApiKey)}:{success:!1,error:"请先在设置页面配置Gemini API密钥"}}catch(g){return console.error("AI_PROCESS_TEXT操作失败:",g),{success:!1,error:g instanceof Error?g.message:"AI处理失败"}}case"VERIFY_GEMINI_API_KEY":try{const{geminiService:g}=await K(async()=>{const{geminiService:x}=await import("../../geminiService-B9yebQZR.js");return{geminiService:x}},[]),{apiKey:S}=e.payload;return!S||typeof S!="string"?{success:!1,error:"API密钥不能为空"}:{success:!0,data:await g.validateApiKey(S)}}catch(g){return console.error("VERIFY_GEMINI_API_KEY操作失败:",g),{success:!1,error:g instanceof Error?g.message:"API密钥验证失败"}}case"GET_DUE_CARDS":return{success:!0,data:await y.getDueCards(e.payload?.deckId,e.payload?.limit)};case"REVIEW_CARD":const u=await N.reviewCard(e.payload.cardId,e.payload.rating);return await this.updateBadge(),{success:!0,data:u};case"GET_CARD_PREDICTIONS":const l=await y.getCardById(e.payload.cardId);return l?{success:!0,data:{again:await N.getNextReviewDate(l,"Again"),hard:await N.getNextReviewDate(l,"Hard"),good:await N.getNextReviewDate(l,"Good"),easy:await N.getNextReviewDate(l,"Easy")}}:{success:!1,error:"Card not found"};case"GET_CARDS_BY_DECK":return{success:!0,data:await y.getCardsByDeckId(e.payload.deckId)};case"RESET_CARD_PROGRESS":return await y.resetCardProgress(e.payload.cardId),await this.updateBadge(),{success:!0};case"GET_FSRS_CONFIG":return{success:!0,data:N.getConfig()};case"UPDATE_FSRS_CONFIG":return N.updateConfig(e.payload),{success:!0};case"GET_FSRS_STATS":const _=await y.getCardsByDeckId(e.payload.deckId);return{success:!0,data:await N.calculateLearningProgress(_)};case"GET_USER_CONFIG":return{success:!0,data:{theme:"auto",language:"zh-CN"}};case"SAVE_USER_CONFIG":return{success:!0};case"GET_DATABASE_SIZE":return{success:!0,data:{decks:(await y.getAllDecks()).length}};case"VALIDATE_DATABASE_INTEGRITY":return{success:!0,data:await y.validateDatabaseIntegrity()};case"CLEAR_ALL_DATA":return await y.clearAllData(),await this.updateBadge(),{success:!0};case"STORE_AUDIO":return{success:!1,error:"Audio storage not implemented yet"};case"GET_AUDIO":return{success:!1,error:"Audio retrieval not implemented yet"};case"DELETE_AUDIO":return{success:!1,error:"Audio deletion not implemented yet"};case"BUILD_QUEUE":return{success:!0,data:await ve.buildQueue(e.payload?.deckId,e.payload?.limit)};case"RESET_CARDS_IN_DECK":const m=await ve.resetCardsInDeck(e.payload.deckId);return await this.updateBadge(),{success:!0,data:m};default:return console.warn(`Unknown message type: ${e.type}`),{success:!1,error:`Unknown message type: ${e.type}`}}}catch(a){return console.error(`Error handling message ${e.type}:`,a),a instanceof Error&&a.message.includes("Failed to initialize")?{success:!1,error:"应用初始化失败，请尝试重新加载扩展。如果问题持续存在，请检查浏览器控制台获取详细错误信息。"}:a instanceof Error&&a.message.includes("Database not initialized")?{success:!1,error:"数据库连接失败，正在尝试重新连接...请稍后重试。"}:{success:!1,error:a instanceof Error?a.message:"Unknown error"}}}getCardTemplatesForNoteType(e){switch(e){case"CtoE":return["CtoE_ZhToEn"];case"Retranslate":return["Retranslate_Forward","Retranslate_Backward"];case"SentenceParaphrase":return["SentenceParaphrase_Listen","SentenceParaphrase_Speak"];case"Article":return["Article_Reading","Article_Questions"];default:return["Basic"]}}}const q=new bt;chrome.runtime.onStartup.addListener(async()=>{console.log("Extension startup");try{await q.init()}catch(i){console.error("Failed to initialize on startup:",i)}});chrome.runtime.onInstalled.addListener(async()=>{console.log("Extension installed");try{await q.init()}catch(i){console.error("Failed to initialize on install:",i)}});chrome.runtime.onMessage.addListener((i,e,t)=>(q.handleMessage(i,e).then(a=>t(a)).catch(a=>{console.error("Message handling failed:",a),t({success:!1,error:a instanceof Error?a.message:"Unknown error"})}),!0));chrome.alarms.onAlarm.addListener(async i=>{try{await q.handleAlarm(i)}catch(e){console.error("Alarm handling failed:",e)}});
