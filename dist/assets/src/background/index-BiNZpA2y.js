import{a as pe,g as Se,b as be,p as ce}from"../../settingsService-aiStH4Bw.js";import{c as F,a as _e,g as Ce}from"../../_commonjsHelpers-BosuxZz1.js";const Y=(i,e)=>e.some(t=>i instanceof t);let de,le;function Ie(){return de||(de=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])}function Ae(){return le||(le=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])}const Q=new WeakMap,H=new WeakMap,O=new WeakMap;function Ee(i){const e=new Promise((t,a)=>{const r=()=>{i.removeEventListener("success",n),i.removeEventListener("error",d)},n=()=>{t(M(i.result)),r()},d=()=>{a(i.error),r()};i.addEventListener("success",n),i.addEventListener("error",d)});return O.set(e,i),e}function Re(i){if(Q.has(i))return;const e=new Promise((t,a)=>{const r=()=>{i.removeEventListener("complete",n),i.removeEventListener("error",d),i.removeEventListener("abort",d)},n=()=>{t(),r()},d=()=>{a(i.error||new DOMException("AbortError","AbortError")),r()};i.addEventListener("complete",n),i.addEventListener("error",d),i.addEventListener("abort",d)});Q.set(i,e)}let Z={get(i,e,t){if(i instanceof IDBTransaction){if(e==="done")return Q.get(i);if(e==="store")return t.objectStoreNames[1]?void 0:t.objectStore(t.objectStoreNames[0])}return M(i[e])},set(i,e,t){return i[e]=t,!0},has(i,e){return i instanceof IDBTransaction&&(e==="done"||e==="store")?!0:e in i}};function ve(i){Z=i(Z)}function ke(i){return Ae().includes(i)?function(...e){return i.apply(J(this),e),M(this.request)}:function(...e){return M(i.apply(J(this),e))}}function Te(i){return typeof i=="function"?ke(i):(i instanceof IDBTransaction&&Re(i),Y(i,Ie())?new Proxy(i,Z):i)}function M(i){if(i instanceof IDBRequest)return Ee(i);if(H.has(i))return H.get(i);const e=Te(i);return e!==i&&(H.set(i,e),O.set(e,i)),e}const J=i=>O.get(i);function Le(i,e,{blocked:t,upgrade:a,blocking:r,terminated:n}={}){const d=indexedDB.open(i,e),o=M(d);return a&&d.addEventListener("upgradeneeded",s=>{a(M(d.result),s.oldVersion,s.newVersion,M(d.transaction),s)}),t&&d.addEventListener("blocked",s=>t(s.oldVersion,s.newVersion,s)),o.then(s=>{n&&s.addEventListener("close",()=>n()),r&&s.addEventListener("versionchange",c=>r(c.oldVersion,c.newVersion,c))}).catch(()=>{}),o}const Ne=["get","getKey","getAll","getAllKeys","count"],Be=["put","add","delete","clear"],K=new Map;function ue(i,e){if(!(i instanceof IDBDatabase&&!(e in i)&&typeof e=="string"))return;if(K.get(e))return K.get(e);const t=e.replace(/FromIndex$/,""),a=e!==t,r=Be.includes(t);if(!(t in(a?IDBIndex:IDBObjectStore).prototype)||!(r||Ne.includes(t)))return;const n=async function(d,...o){const s=this.transaction(d,r?"readwrite":"readonly");let c=s.store;return a&&(c=c.index(o.shift())),(await Promise.all([c[t](...o),r&&s.done]))[0]};return K.set(e,n),n}ve(i=>({...i,get:(e,t,a)=>ue(e,t)||i.get(e,t,a),has:(e,t)=>!!ue(e,t)||i.has(e,t)}));const Me=["continue","continuePrimaryKey","advance"],he={},ee=new WeakMap,xe=new WeakMap,Fe={get(i,e){if(!Me.includes(e))return i[e];let t=he[e];return t||(t=he[e]=function(...a){ee.set(this,xe.get(this)[e](...a))}),t}};async function*$e(...i){let e=this;if(e instanceof IDBCursor||(e=await e.openCursor(...i)),!e)return;e=e;const t=new Proxy(e,Fe);for(xe.set(t,e),O.set(t,J(e));e;)yield t,e=await(ee.get(t)||e.continue()),ee.delete(t)}function fe(i,e){return e===Symbol.asyncIterator&&Y(i,[IDBIndex,IDBObjectStore,IDBCursor])||e==="iterate"&&Y(i,[IDBIndex,IDBObjectStore])}ve(i=>({...i,get(e,t,a){return fe(e,t)?$e:i.get(e,t,a)},has(e,t){return fe(e,t)||i.has(e,t)}}));const ze="LanGearDB",je=3;class Pe{constructor(){this.db=null}async initDatabase(){try{this.db=await Le(ze,je,{upgrade(e,t,a,r){if(console.log(`Upgrading database from version ${t} to ${a}`),e.objectStoreNames.contains("decks")||e.createObjectStore("decks",{keyPath:"id",autoIncrement:!0}).createIndex("name","name",{unique:!1}),!e.objectStoreNames.contains("notes")){const n=e.createObjectStore("notes",{keyPath:"id",autoIncrement:!0});n.createIndex("deckId","deckId",{unique:!1}),n.createIndex("noteType","noteType",{unique:!1}),n.createIndex("tags","tags",{unique:!1,multiEntry:!0})}if(e.objectStoreNames.contains("cards")){if(t<2){const n=r.objectStore("cards");n.indexNames.contains("deckId")||n.createIndex("deckId","deckId",{unique:!1}),n.indexNames.contains("deckId-due")||n.createIndex("deckId-due",["deckId","due"],{unique:!1})}}else{const n=e.createObjectStore("cards",{keyPath:"id",autoIncrement:!0});n.createIndex("noteId","noteId",{unique:!1}),n.createIndex("deckId","deckId",{unique:!1}),n.createIndex("due","due",{unique:!1}),n.createIndex("state","state",{unique:!1}),n.createIndex("deckId-due",["deckId","due"],{unique:!1})}if(t<3&&r.objectStore("cards").openCursor().then(function d(o){if(o){const s=o.value;s.learningStep===void 0&&(s.learningStep=0,o.update(s)),o.continue().then(d)}}),!e.objectStoreNames.contains("reviewLogs")){const n=e.createObjectStore("reviewLogs",{keyPath:"id",autoIncrement:!0});n.createIndex("cardId","cardId",{unique:!1}),n.createIndex("reviewTime","reviewTime",{unique:!1})}e.objectStoreNames.contains("audioStore")||e.createObjectStore("audioStore",{keyPath:"id"}).createIndex("createdAt","createdAt",{unique:!1})}}),console.log("Database initialized successfully")}catch(e){throw console.error("Failed to initialize database:",e),e}}ensureDatabase(){if(!this.db)throw new Error("Database not initialized. Call initDatabase() first.");return this.db}async createDeck(e){const t=this.ensureDatabase(),a=new Date,r={...e,fsrsConfig:{...pe,...e.fsrsConfig},createdAt:a,updatedAt:a},n=await t.add("decks",r);return{...r,id:n}}async getAllDecks(){return(await this.ensureDatabase().getAll("decks")).map(a=>({...a,createdAt:typeof a.createdAt=="string"?new Date(a.createdAt):a.createdAt,updatedAt:typeof a.updatedAt=="string"?new Date(a.updatedAt):a.updatedAt}))}async getDeckById(e){const a=await this.ensureDatabase().get("decks",e);return a?{...a,createdAt:typeof a.createdAt=="string"?new Date(a.createdAt):a.createdAt,updatedAt:typeof a.updatedAt=="string"?new Date(a.updatedAt):a.updatedAt}:void 0}async updateDeck(e,t){const a=this.ensureDatabase(),r=await a.get("decks",e);if(!r)throw new Error(`Deck with id ${e} not found`);const n={...r,...t,updatedAt:new Date};return await a.put("decks",n),n}async deleteDeck(e){const a=this.ensureDatabase().transaction(["decks","notes","cards","reviewLogs"],"readwrite");if(!await a.objectStore("decks").get(e))throw new Error(`Deck with id ${e} not found`);const d=(await a.objectStore("notes").index("deckId").getAll(e)).map(o=>o.id);for(const o of d){const s=await a.objectStore("cards").index("noteId").getAll(o),c=s.map(u=>u.id);for(const u of c){const l=await a.objectStore("reviewLogs").index("cardId").getAll(u);for(const h of l)await a.objectStore("reviewLogs").delete(h.id)}for(const u of s)await a.objectStore("cards").delete(u.id);await a.objectStore("notes").delete(o)}await a.objectStore("decks").delete(e),await a.done}async createNote(e){const t=this.ensureDatabase(),a=new Date;try{const{id:r,createdAt:n,updatedAt:d,...o}=e,s={...o,createdAt:a,updatedAt:a};console.log("Creating note with clean data:",{...s,id:"[auto-generated]"});const c=await t.add("notes",s),u={...s,id:c};return console.log("Note created successfully with ID:",c),u}catch(r){throw console.error("Failed to create note:",r),r instanceof Error&&r.name==="ConstraintError"?new Error("Note creation failed: Duplicate key conflict. This may indicate database corruption or concurrent operations."):r}}async getNotesByDeckId(e){return(await this.ensureDatabase().getAllFromIndex("notes","deckId",e)).map(r=>this.convertDatesInNote(r))}async getNoteById(e){const a=await this.ensureDatabase().get("notes",e);return a?this.convertDatesInNote(a):void 0}async updateNote(e,t){const a=this.ensureDatabase(),r=await a.get("notes",e);if(!r)throw new Error(`Note with id ${e} not found`);const n={...r,...t,updatedAt:new Date};return await a.put("notes",n),n}async deleteNote(e){const a=(await this.ensureDatabase()).transaction(["notes","cards","reviewLogs"],"readwrite"),r=await a.objectStore("cards").index("noteId").getAll(e);for(const n of r){const d=await a.objectStore("reviewLogs").index("cardId").getAll(n.id);for(const o of d)await a.objectStore("reviewLogs").delete(o.id);await a.objectStore("cards").delete(n.id)}await a.objectStore("notes").delete(e),await a.done}async createCardsForNote(e){const t=this.ensureDatabase(),a=[],r=new Date;switch(console.log("Creating cards for note:",e.id,"type:",e.noteType),e.noteType){case"CtoE":a.push({noteId:e.id,deckId:e.deckId,cardType:"CtoE",state:"New",due:r,stability:0,difficulty:0,elapsedDays:0,scheduledDays:0,reps:0,lapses:0,learningStep:0,createdAt:r,updatedAt:r});break;case"Retranslate":a.push({noteId:e.id,deckId:e.deckId,cardType:"Retranslate",state:"New",due:r,stability:0,difficulty:0,elapsedDays:0,scheduledDays:0,reps:0,lapses:0,learningStep:0,createdAt:r,updatedAt:r});break;default:throw new Error(`Unsupported note type: ${e.noteType}`)}try{const n=[];for(const d of a){console.log("Adding card to database:",{...d,id:"[auto-generated]"});const o=await t.add("cards",d),s={...d,id:o};n.push(s),console.log("Card created successfully with ID:",o)}return console.log("All cards created successfully for note:",e.id,"total cards:",n.length),n}catch(n){throw console.error("Failed to create cards for note:",e.id,n),n instanceof Error&&n.name==="ConstraintError"?new Error(`Card creation failed for note ${e.id}: Auto-increment key conflict. This may indicate database corruption.`):n}}async getDueCards(e,t,a,r){const n=this.ensureDatabase(),d=new Date;let o;if(e){const u=n.transaction("cards","readonly").store.index("deckId-due"),l=IDBKeyRange.bound([e,new Date(0)],[e,d]);o=await u.getAll(l)}else o=await n.getAll("cards");const s=o.map(c=>this.convertDatesInCard(c)).filter(c=>c.due<=d);return s.sort((c,u)=>c.due.getTime()-u.due.getTime()),a!==void 0||r!==void 0?this.applyDailyLimits(s,a,r):t?s.slice(0,t):s}async applyDailyLimits(e,t,a){const r=await this.getTodayReviewCounts(),n=[];let d=0,o=0;for(const s of e){const c=s.state==="New",u=s.state==="Review"||s.state==="Learning"||s.state==="Relearning";if(c&&t!==void 0){if(r.newCards+d>=t)continue;d++}if(u&&a!==void 0){if(r.reviewCards+o>=a)continue;o++}n.push(s)}return n}async getTodayReviewCounts(){const e=this.ensureDatabase(),t=new Date,a=new Date(t.getFullYear(),t.getMonth(),t.getDate()),r=new Date(t.getFullYear(),t.getMonth(),t.getDate()+1),d=e.transaction("reviewLogs","readonly").store.index("reviewTime"),o=IDBKeyRange.bound(a,r,!1,!0),s=await d.getAll(o);let c=0,u=0;for(const l of s)l.stateBefore==="New"?c++:u++;return{newCards:c,reviewCards:u}}async getCardsByDeckId(e){return(await this.ensureDatabase().getAllFromIndex("cards","deckId",e)).map(r=>this.convertDatesInCard(r))}async getCardById(e){const a=await this.ensureDatabase().get("cards",e);return a?this.convertDatesInCard(a):void 0}async updateCard(e,t){const a=this.ensureDatabase(),r=await this.getCardById(e);if(!r)throw new Error(`Card with id ${e} not found`);const n={...r,...t,updatedAt:new Date};return await a.put("cards",n),n}async resetCardProgress(e){const t=this.ensureDatabase(),a=await this.getCardById(e);if(!a)throw new Error(`Card with id ${e} not found`);const r={...a,state:"New",due:new Date,stability:0,difficulty:0,elapsedDays:0,scheduledDays:0,reps:0,lapses:0,lastReview:void 0,updatedAt:new Date};await t.put("cards",r);const n=t.transaction(["reviewLogs"],"readwrite"),o=n.objectStore("reviewLogs").index("cardId");for await(const s of o.iterate(e))await s.delete();await n.done}async resetCardsInDeck(e){const t=this.ensureDatabase();let a=0;try{const r=t.transaction(["cards","reviewLogs"],"readwrite"),n=r.objectStore("cards"),d=r.objectStore("reviewLogs");let o;e===null?o=await n.getAll():o=await n.index("deckId").getAll(e),console.log(`Resetting ${o.length} cards in deck ${e||"all decks"}`);for(const s of o){const c={...s,state:"New",due:new Date,stability:0,difficulty:0,elapsedDays:0,scheduledDays:0,reps:0,lapses:0,lastReview:void 0,updatedAt:new Date};await n.put(c),a++;const u=d.index("cardId");for await(const l of u.iterate(s.id))await l.delete()}return await r.done,console.log(`Successfully reset ${a} cards`),a}catch(r){throw console.error("Error resetting cards in deck:",r),new Error(`Failed to reset cards: ${r instanceof Error?r.message:"Unknown error"}`)}}async addReviewLog(e){const a=await this.ensureDatabase().add("reviewLogs",e);return{...e,id:a}}async getReviewLogsByCardId(e){return(await this.ensureDatabase().getAllFromIndex("reviewLogs","cardId",e)).map(r=>this.convertDatesInReviewLog(r))}async getDeckStatistics(e){const t=this.ensureDatabase(),a=await t.getAllFromIndex("notes","deckId",e),r=await t.getAllFromIndex("cards","deckId",e),n=a.map(w=>this.convertDatesInNote(w)),d=r.map(w=>this.convertDatesInCard(w)),o=n.length;let s=d.length,c=0,u=0,l=0,h=0;const f=new Date;for(const w of d){switch(w.state){case"New":c++;break;case"Learning":u++;break;case"Review":l++;break}w.due<=f&&h++}return{totalCards:s,newCards:c,learningCards:u,reviewCards:l,dueCards:h,totalNotes:o}}convertDatesInCard(e){return{...e,due:typeof e.due=="string"?new Date(e.due):e.due,createdAt:typeof e.createdAt=="string"?new Date(e.createdAt):e.createdAt,updatedAt:typeof e.updatedAt=="string"?new Date(e.updatedAt):e.updatedAt}}convertDatesInNote(e){return{...e,createdAt:typeof e.createdAt=="string"?new Date(e.createdAt):e.createdAt,updatedAt:typeof e.updatedAt=="string"?new Date(e.updatedAt):e.updatedAt}}convertDatesInReviewLog(e){return{...e,reviewTime:typeof e.reviewTime=="string"?new Date(e.reviewTime):e.reviewTime}}async validateDatabaseIntegrity(){const e=this.ensureDatabase(),t=[];let a=0;try{const r=await e.getAll("cards"),n=await e.getAll("notes"),d=new Set(n.map(w=>w.id)),o=r.filter(w=>!d.has(w.noteId));o.length>0&&(t.push(`Found ${o.length} orphaned cards without corresponding notes`),a+=o.length);const s=await e.getAll("reviewLogs"),c=new Set(r.map(w=>w.id)),u=s.filter(w=>!c.has(w.cardId));u.length>0&&(t.push(`Found ${u.length} orphaned review logs without corresponding cards`),a+=u.length);const l=await e.getAll("decks"),h=new Set(l.map(w=>w.id)),f=n.filter(w=>!h.has(w.deckId));return f.length>0&&(t.push(`Found ${f.length} orphaned notes without corresponding decks`),a+=f.length),console.log("Database integrity check completed:",{isValid:t.length===0,issues:t,orphanedRecords:a}),{isValid:t.length===0,issues:t,orphanedRecords:a}}catch(r){return console.error("Database integrity validation failed:",r),{isValid:!1,issues:[`Validation failed: ${r instanceof Error?r.message:"Unknown error"}`],orphanedRecords:0}}}async clearAllData(){const t=this.ensureDatabase().transaction(["decks","notes","cards","reviewLogs","audioStore"],"readwrite");await t.objectStore("reviewLogs").clear(),await t.objectStore("cards").clear(),await t.objectStore("notes").clear(),await t.objectStore("decks").clear(),await t.objectStore("audioStore").clear(),await t.done}close(){this.db&&(this.db.close(),this.db=null)}}const g=new Pe;var ae={exports:{}};ae.exports;(function(i){(function(e,t,a){function r(s){var c=this,u=o();c.next=function(){var l=2091639*c.s0+c.c*23283064365386963e-26;return c.s0=c.s1,c.s1=c.s2,c.s2=l-(c.c=l|0)},c.c=1,c.s0=u(" "),c.s1=u(" "),c.s2=u(" "),c.s0-=u(s),c.s0<0&&(c.s0+=1),c.s1-=u(s),c.s1<0&&(c.s1+=1),c.s2-=u(s),c.s2<0&&(c.s2+=1),u=null}function n(s,c){return c.c=s.c,c.s0=s.s0,c.s1=s.s1,c.s2=s.s2,c}function d(s,c){var u=new r(s),l=c&&c.state,h=u.next;return h.int32=function(){return u.next()*4294967296|0},h.double=function(){return h()+(h()*2097152|0)*11102230246251565e-32},h.quick=h,l&&(typeof l=="object"&&n(l,u),h.state=function(){return n(u,{})}),h}function o(){var s=4022871197,c=function(u){u=String(u);for(var l=0;l<u.length;l++){s+=u.charCodeAt(l);var h=.02519603282416938*s;s=h>>>0,h-=s,h*=s,s=h>>>0,h-=s,s+=h*4294967296}return(s>>>0)*23283064365386963e-26};return c}t&&t.exports?t.exports=d:this.alea=d})(F,i)})(ae);var Ge=ae.exports,re={exports:{}};re.exports;(function(i){(function(e,t,a){function r(o){var s=this,c="";s.x=0,s.y=0,s.z=0,s.w=0,s.next=function(){var l=s.x^s.x<<11;return s.x=s.y,s.y=s.z,s.z=s.w,s.w^=s.w>>>19^l^l>>>8},o===(o|0)?s.x=o:c+=o;for(var u=0;u<c.length+64;u++)s.x^=c.charCodeAt(u)|0,s.next()}function n(o,s){return s.x=o.x,s.y=o.y,s.z=o.z,s.w=o.w,s}function d(o,s){var c=new r(o),u=s&&s.state,l=function(){return(c.next()>>>0)/4294967296};return l.double=function(){do var h=c.next()>>>11,f=(c.next()>>>0)/4294967296,w=(h+f)/(1<<21);while(w===0);return w},l.int32=c.next,l.quick=l,u&&(typeof u=="object"&&n(u,c),l.state=function(){return n(c,{})}),l}t&&t.exports?t.exports=d:this.xor128=d})(F,i)})(re);var qe=re.exports,se={exports:{}};se.exports;(function(i){(function(e,t,a){function r(o){var s=this,c="";s.next=function(){var l=s.x^s.x>>>2;return s.x=s.y,s.y=s.z,s.z=s.w,s.w=s.v,(s.d=s.d+362437|0)+(s.v=s.v^s.v<<4^(l^l<<1))|0},s.x=0,s.y=0,s.z=0,s.w=0,s.v=0,o===(o|0)?s.x=o:c+=o;for(var u=0;u<c.length+64;u++)s.x^=c.charCodeAt(u)|0,u==c.length&&(s.d=s.x<<10^s.x>>>4),s.next()}function n(o,s){return s.x=o.x,s.y=o.y,s.z=o.z,s.w=o.w,s.v=o.v,s.d=o.d,s}function d(o,s){var c=new r(o),u=s&&s.state,l=function(){return(c.next()>>>0)/4294967296};return l.double=function(){do var h=c.next()>>>11,f=(c.next()>>>0)/4294967296,w=(h+f)/(1<<21);while(w===0);return w},l.int32=c.next,l.quick=l,u&&(typeof u=="object"&&n(u,c),l.state=function(){return n(c,{})}),l}t&&t.exports?t.exports=d:this.xorwow=d})(F,i)})(se);var Ue=se.exports,ne={exports:{}};ne.exports;(function(i){(function(e,t,a){function r(o){var s=this;s.next=function(){var u=s.x,l=s.i,h,f;return h=u[l],h^=h>>>7,f=h^h<<24,h=u[l+1&7],f^=h^h>>>10,h=u[l+3&7],f^=h^h>>>3,h=u[l+4&7],f^=h^h<<7,h=u[l+7&7],h=h^h<<13,f^=h^h<<9,u[l]=f,s.i=l+1&7,f};function c(u,l){var h,f=[];if(l===(l|0))f[0]=l;else for(l=""+l,h=0;h<l.length;++h)f[h&7]=f[h&7]<<15^l.charCodeAt(h)+f[h+1&7]<<13;for(;f.length<8;)f.push(0);for(h=0;h<8&&f[h]===0;++h);for(h==8?f[7]=-1:f[h],u.x=f,u.i=0,h=256;h>0;--h)u.next()}c(s,o)}function n(o,s){return s.x=o.x.slice(),s.i=o.i,s}function d(o,s){o==null&&(o=+new Date);var c=new r(o),u=s&&s.state,l=function(){return(c.next()>>>0)/4294967296};return l.double=function(){do var h=c.next()>>>11,f=(c.next()>>>0)/4294967296,w=(h+f)/(1<<21);while(w===0);return w},l.int32=c.next,l.quick=l,u&&(u.x&&n(u,c),l.state=function(){return n(c,{})}),l}t&&t.exports?t.exports=d:this.xorshift7=d})(F,i)})(ne);var Oe=ne.exports,ie={exports:{}};ie.exports;(function(i){(function(e,t,a){function r(o){var s=this;s.next=function(){var u=s.w,l=s.X,h=s.i,f,w;return s.w=u=u+1640531527|0,w=l[h+34&127],f=l[h=h+1&127],w^=w<<13,f^=f<<17,w^=w>>>15,f^=f>>>12,w=l[h]=w^f,s.i=h,w+(u^u>>>16)|0};function c(u,l){var h,f,w,S,k,A=[],z=128;for(l===(l|0)?(f=l,l=null):(l=l+"\0",f=0,z=Math.max(z,l.length)),w=0,S=-32;S<z;++S)l&&(f^=l.charCodeAt((S+32)%l.length)),S===0&&(k=f),f^=f<<10,f^=f>>>15,f^=f<<4,f^=f>>>13,S>=0&&(k=k+1640531527|0,h=A[S&127]^=f+k,w=h==0?w+1:0);for(w>=128&&(A[(l&&l.length||0)&127]=-1),w=127,S=4*128;S>0;--S)f=A[w+34&127],h=A[w=w+1&127],f^=f<<13,h^=h<<17,f^=f>>>15,h^=h>>>12,A[w]=f^h;u.w=k,u.X=A,u.i=w}c(s,o)}function n(o,s){return s.i=o.i,s.w=o.w,s.X=o.X.slice(),s}function d(o,s){o==null&&(o=+new Date);var c=new r(o),u=s&&s.state,l=function(){return(c.next()>>>0)/4294967296};return l.double=function(){do var h=c.next()>>>11,f=(c.next()>>>0)/4294967296,w=(h+f)/(1<<21);while(w===0);return w},l.int32=c.next,l.quick=l,u&&(u.X&&n(u,c),l.state=function(){return n(c,{})}),l}t&&t.exports?t.exports=d:this.xor4096=d})(F,i)})(ie);var He=ie.exports,oe={exports:{}};oe.exports;(function(i){(function(e,t,a){function r(o){var s=this,c="";s.next=function(){var l=s.b,h=s.c,f=s.d,w=s.a;return l=l<<25^l>>>7^h,h=h-f|0,f=f<<24^f>>>8^w,w=w-l|0,s.b=l=l<<20^l>>>12^h,s.c=h=h-f|0,s.d=f<<16^h>>>16^w,s.a=w-l|0},s.a=0,s.b=0,s.c=-1640531527,s.d=1367130551,o===Math.floor(o)?(s.a=o/4294967296|0,s.b=o|0):c+=o;for(var u=0;u<c.length+20;u++)s.b^=c.charCodeAt(u)|0,s.next()}function n(o,s){return s.a=o.a,s.b=o.b,s.c=o.c,s.d=o.d,s}function d(o,s){var c=new r(o),u=s&&s.state,l=function(){return(c.next()>>>0)/4294967296};return l.double=function(){do var h=c.next()>>>11,f=(c.next()>>>0)/4294967296,w=(h+f)/(1<<21);while(w===0);return w},l.int32=c.next,l.quick=l,u&&(typeof u=="object"&&n(u,c),l.state=function(){return n(c,{})}),l}t&&t.exports?t.exports=d:this.tychei=d})(F,i)})(oe);var Ke=oe.exports,De={exports:{}};const Ve={},Xe=Object.freeze(Object.defineProperty({__proto__:null,default:Ve},Symbol.toStringTag,{value:"Module"})),We=_e(Xe);(function(i){(function(e,t,a){var r=256,n=6,d=52,o="random",s=a.pow(r,n),c=a.pow(2,d),u=c*2,l=r-1,h;function f(x,v,b){var m=[];v=v==!0?{entropy:!0}:v||{};var D=A(k(v.entropy?[x,j(t)]:x??z(),3),m),_=new w(m),E=function(){for(var C=_.g(n),T=s,R=0;C<c;)C=(C+R)*r,T*=r,R=_.g(1);for(;C>=u;)C/=2,T/=2,R>>>=1;return(C+R)/T};return E.int32=function(){return _.g(4)|0},E.quick=function(){return _.g(4)/4294967296},E.double=E,A(j(_.S),t),(v.pass||b||function(C,T,R,L){return L&&(L.S&&S(L,_),C.state=function(){return S(_,{})}),R?(a[o]=C,T):C})(E,D,"global"in v?v.global:this==a,v.state)}function w(x){var v,b=x.length,m=this,D=0,_=m.i=m.j=0,E=m.S=[];for(b||(x=[b++]);D<r;)E[D]=D++;for(D=0;D<r;D++)E[D]=E[_=l&_+x[D%b]+(v=E[D])],E[_]=v;(m.g=function(C){for(var T,R=0,L=m.i,U=m.j,G=m.S;C--;)T=G[L=l&L+1],R=R*r+G[l&(G[L]=G[U=l&U+T])+(G[U]=T)];return m.i=L,m.j=U,R})(r)}function S(x,v){return v.i=x.i,v.j=x.j,v.S=x.S.slice(),v}function k(x,v){var b=[],m=typeof x,D;if(v&&m=="object")for(D in x)try{b.push(k(x[D],v-1))}catch{}return b.length?b:m=="string"?x:x+"\0"}function A(x,v){for(var b=x+"",m,D=0;D<b.length;)v[l&D]=l&(m^=v[l&D]*19)+b.charCodeAt(D++);return j(v)}function z(){try{var x;return h&&(x=h.randomBytes)?x=x(r):(x=new Uint8Array(r),(e.crypto||e.msCrypto).getRandomValues(x)),j(x)}catch{var v=e.navigator,b=v&&v.plugins;return[+new Date,e,b,e.screen,j(t)]}}function j(x){return String.fromCharCode.apply(0,x)}if(A(a.random(),t),i.exports){i.exports=f;try{h=We}catch{}}else a["seed"+o]=f})(typeof self<"u"?self:F,[],Math)})(De);var Ye=De.exports,Qe=Ge,Ze=qe,Je=Ue,et=Oe,tt=He,at=Ke,$=Ye;$.alea=Qe;$.xor128=Ze;$.xorwow=Je;$.xorshift7=et;$.xor4096=tt;$.tychei=at;var rt=$;const st=Ce(rt);var y=(i=>(i[i.New=0]="New",i[i.Learning=1]="Learning",i[i.Review=2]="Review",i[i.Relearning=3]="Relearning",i))(y||{}),p=(i=>(i[i.Manual=0]="Manual",i[i.Again=1]="Again",i[i.Hard=2]="Hard",i[i.Good=3]="Good",i[i.Easy=4]="Easy",i))(p||{});Date.prototype.scheduler=function(i,e){return B(this,i,e)},Date.prototype.diff=function(i,e){return nt(this,i,e)},Date.prototype.format=function(){return it(this)},Date.prototype.dueFormat=function(i,e,t){return ot(this,i,e,t)};function B(i,e,t){return new Date(t?I(i).getTime()+e*24*60*60*1e3:I(i).getTime()+e*60*1e3)}function nt(i,e,t){if(!i||!e)throw new Error("Invalid date");const a=I(i).getTime()-I(e).getTime();let r=0;switch(t){case"days":r=Math.floor(a/(24*60*60*1e3));break;case"minutes":r=Math.floor(a/(60*1e3));break}return r}function it(i){const e=I(i),t=e.getFullYear(),a=e.getMonth()+1,r=e.getDate(),n=e.getHours(),d=e.getMinutes(),o=e.getSeconds();return`${t}-${q(a)}-${q(r)} ${q(n)}:${q(d)}:${q(o)}`}function q(i){return i<10?`0${i}`:`${i}`}const V=[60,60,24,31,12],X=["second","min","hour","day","month","year"];function ot(i,e,t,a=X){i=I(i),e=I(e),a.length!==X.length&&(a=X);let r=i.getTime()-e.getTime(),n;for(r/=1e3,n=0;n<V.length&&!(r<V[n]);n++)r/=V[n];return`${Math.floor(r)}${t?a[n]:""}`}function I(i){if(typeof i=="object"&&i instanceof Date)return i;if(typeof i=="string"){const e=Date.parse(i);if(isNaN(e))throw new Error(`Invalid date:[${i}]`);return new Date(e)}else if(typeof i=="number")return new Date(i);throw new Error(`Invalid date:[${i}]`)}function W(i){if(typeof i=="string"){const e=i.charAt(0).toUpperCase(),t=i.slice(1).toLowerCase(),a=y[`${e}${t}`];if(a===void 0)throw new Error(`Invalid state:[${i}]`);return a}else if(typeof i=="number")return i;throw new Error(`Invalid state:[${i}]`)}function ct(i){if(typeof i=="string"){const e=i.charAt(0).toUpperCase(),t=i.slice(1).toLowerCase(),a=p[`${e}${t}`];if(a===void 0)throw new Error(`Invalid rating:[${i}]`);return a}else if(typeof i=="number")return i;throw new Error(`Invalid rating:[${i}]`)}p.Again,p.Hard,p.Good,p.Easy;const dt=[{start:2.5,end:7,factor:.15},{start:7,end:20,factor:.1},{start:20,end:1/0,factor:.05}];function lt(i,e,t){let a=1;for(const d of dt)a+=d.factor*Math.max(Math.min(i,d.end)-d.start,0);i=Math.min(i,t);let r=Math.max(2,Math.round(i-a));const n=Math.min(Math.round(i+a),t);return i>e&&(r=Math.max(r,e+1)),r=Math.min(r,n),{min_ivl:r,max_ivl:n}}class ut{again;hard;good;easy;last_review;last_elapsed_days;copy(e){return{...e}}constructor(e,t){this.last_review=e.last_review||e.due,this.last_elapsed_days=e.elapsed_days,e.elapsed_days=e.state===y.New?0:t.diff(e.last_review,"days"),e.last_review=t,e.reps+=1,this.again=this.copy(e),this.hard=this.copy(e),this.good=this.copy(e),this.easy=this.copy(e)}update_state(e){return e===y.New?(this.again.state=y.Learning,this.hard.state=y.Learning,this.good.state=y.Learning,this.easy.state=y.Review):e===y.Learning||e===y.Relearning?(this.again.state=e,this.hard.state=e,this.good.state=y.Review,this.easy.state=y.Review):e===y.Review&&(this.again.state=y.Relearning,this.hard.state=y.Review,this.good.state=y.Review,this.easy.state=y.Review,this.again.lapses+=1),this}schedule(e,t,a,r){return this.again.scheduled_days=0,this.hard.scheduled_days=t,this.good.scheduled_days=a,this.easy.scheduled_days=r,this.again.due=B(e,5),this.hard.due=t>0?B(e,t,!0):B(e,10),this.good.due=B(e,a,!0),this.easy.due=B(e,r,!0),this}record_log(e,t){return{[p.Again]:{card:this.again,log:{rating:p.Again,state:e.state,due:this.last_review,stability:e.stability,difficulty:e.difficulty,elapsed_days:e.elapsed_days,last_elapsed_days:this.last_elapsed_days,scheduled_days:e.scheduled_days,review:t}},[p.Hard]:{card:this.hard,log:{rating:p.Hard,state:e.state,due:this.last_review,stability:e.stability,difficulty:e.difficulty,elapsed_days:e.elapsed_days,last_elapsed_days:this.last_elapsed_days,scheduled_days:e.scheduled_days,review:t}},[p.Good]:{card:this.good,log:{rating:p.Good,state:e.state,due:this.last_review,stability:e.stability,difficulty:e.difficulty,elapsed_days:e.elapsed_days,last_elapsed_days:this.last_elapsed_days,scheduled_days:e.scheduled_days,review:t}},[p.Easy]:{card:this.easy,log:{rating:p.Easy,state:e.state,due:this.last_review,stability:e.stability,difficulty:e.difficulty,elapsed_days:e.elapsed_days,last_elapsed_days:this.last_elapsed_days,scheduled_days:e.scheduled_days,review:t}}}}}const ht=.9,ft=36500,wt=[.5701,1.4436,4.1386,10.9355,5.1443,1.2006,.8627,.0362,1.629,.1342,1.0166,2.1174,.0839,.3204,1.4676,.219,2.8237],gt=!1,te=i=>({request_retention:i?.request_retention||ht,maximum_interval:i?.maximum_interval||ft,w:i?.w||wt,enable_fuzz:i?.enable_fuzz||gt}),we=-.5,ge=19/81;class yt{param;intervalModifier;seed;constructor(e){this.param=new Proxy(te(e),this.params_handler_proxy()),this.intervalModifier=this.calculate_interval_modifier(this.param.request_retention)}get interval_modifier(){return this.intervalModifier}calculate_interval_modifier(e){if(e<=0||e>1)throw new Error("Requested retention rate should be in the range (0,1]");return+((Math.pow(e,1/we)-1)/ge).toFixed(8)}get parameters(){return this.param}set parameters(e){this.update_parameters(e)}params_handler_proxy(){const e=this;return{set:function(t,a,r){return a==="request_retention"&&Number.isFinite(r)&&(e.intervalModifier=e.calculate_interval_modifier(Number(r))),t[a]=r,!0}}}update_parameters(e){const t=te(e);for(const a in t)if(a in this.param){const r=a;this.param[r]=t[r]}}init_ds(e){e.again.difficulty=this.init_difficulty(p.Again),e.again.stability=this.init_stability(p.Again),e.hard.difficulty=this.init_difficulty(p.Hard),e.hard.stability=this.init_stability(p.Hard),e.good.difficulty=this.init_difficulty(p.Good),e.good.stability=this.init_stability(p.Good),e.easy.difficulty=this.init_difficulty(p.Easy),e.easy.stability=this.init_stability(p.Easy)}next_ds(e,t,a,r){e.again.difficulty=this.next_difficulty(t,p.Again),e.again.stability=this.next_forget_stability(t,a,r),e.hard.difficulty=this.next_difficulty(t,p.Hard),e.hard.stability=this.next_recall_stability(t,a,r,p.Hard),e.good.difficulty=this.next_difficulty(t,p.Good),e.good.stability=this.next_recall_stability(t,a,r,p.Good),e.easy.difficulty=this.next_difficulty(t,p.Easy),e.easy.stability=this.next_recall_stability(t,a,r,p.Easy)}init_stability(e){return Math.max(this.param.w[e-1],.1)}init_difficulty(e){return+Math.min(Math.max(this.param.w[4]-(e-3)*this.param.w[5],1),10).toFixed(8)}apply_fuzz(e,t,a){if(!a||e<2.5)return Math.round(e);const r=st(this.seed)(),{min_ivl:n,max_ivl:d}=lt(e,t,this.param.maximum_interval);return Math.floor(r*(d-n+1)+n)}next_interval(e,t,a=this.param.enable_fuzz){const r=Math.min(Math.max(1,Math.round(e*this.intervalModifier)),this.param.maximum_interval);return this.apply_fuzz(r,t,a)}next_difficulty(e,t){const a=e-this.param.w[6]*(t-3);return this.constrain_difficulty(this.mean_reversion(this.param.w[4],a))}constrain_difficulty(e){return Math.min(Math.max(+e.toFixed(8),1),10)}mean_reversion(e,t){return+(this.param.w[7]*e+(1-this.param.w[7])*t).toFixed(8)}next_recall_stability(e,t,a,r){const n=p.Hard===r?this.param.w[15]:1,d=p.Easy===r?this.param.w[16]:1;return+(t*(1+Math.exp(this.param.w[8])*(11-e)*Math.pow(t,-this.param.w[9])*(Math.exp((1-a)*this.param.w[10])-1)*n*d)).toFixed(8)}next_forget_stability(e,t,a){return+(this.param.w[11]*Math.pow(e,-this.param.w[12])*(Math.pow(t+1,this.param.w[13])-1)*Math.exp((1-a)*this.param.w[14])).toFixed(8)}forgetting_curve(e,t){return+Math.pow(1+ge*e/t,we).toFixed(8)}}class pt extends yt{constructor(e){super(e)}preProcessCard(e){return{...e,state:W(e.state),due:I(e.due),last_review:e.last_review?I(e.last_review):void 0}}preProcessDate(e){return I(e)}preProcessLog(e){return{...e,due:I(e.due),rating:ct(e.rating),state:W(e.state),review:I(e.review)}}repeat(e,t,a){const r=this.preProcessCard(e);t=this.preProcessDate(t);const n=new ut(r,t).update_state(r.state);this.seed=String(t.getTime())+String(r.reps);let d,o,s;const c=r.elapsed_days;switch(r.state){case y.New:this.init_ds(n),n.again.due=t.scheduler(1),n.hard.due=t.scheduler(5),n.good.due=t.scheduler(10),d=this.next_interval(n.easy.stability,c),n.easy.scheduled_days=d,n.easy.due=t.scheduler(d,!0);break;case y.Learning:case y.Relearning:s=0,o=this.next_interval(n.good.stability,c),d=Math.max(this.next_interval(n.easy.stability,c),o+1),n.schedule(t,s,o,d);break;case y.Review:{const l=r.difficulty,h=r.stability,f=this.forgetting_curve(c,h);this.next_ds(n,l,h,f),s=this.next_interval(n.hard.stability,c),o=this.next_interval(n.good.stability,c),s=Math.min(s,o),o=Math.max(o,s+1),d=Math.max(this.next_interval(n.easy.stability,c),o+1),n.schedule(t,s,o,d);break}}const u=n.record_log(r,t);return a&&typeof a=="function"?a(u):u}get_retrievability(e,t,a=!0){const r=this.preProcessCard(e);if(t=this.preProcessDate(t),r.state!==y.Review)return;const n=Math.max(t.diff(r.last_review,"days"),0),d=this.forgetting_curve(n,Math.round(r.stability));return a?`${(d*100).toFixed(2)}%`:d}rollback(e,t,a){const r=this.preProcessCard(e),n=this.preProcessLog(t);if(n.rating===p.Manual)throw new Error("Cannot rollback a manual rating");let d,o,s;switch(n.state){case y.New:d=n.due,o=void 0,s=0;break;case y.Learning:case y.Relearning:case y.Review:d=n.review,o=n.due,s=r.lapses-(n.rating===p.Again&&n.state===y.Review?1:0);break}const c={...r,due:d,stability:n.stability,difficulty:n.difficulty,elapsed_days:n.last_elapsed_days,scheduled_days:n.scheduled_days,reps:Math.max(0,r.reps-1),lapses:Math.max(0,s),state:n.state,last_review:o};return a&&typeof a=="function"?a(c):c}forget(e,t,a=!1,r){const n=this.preProcessCard(e);t=this.preProcessDate(t);const d=n.state===y.New?0:t.diff(n.last_review,"days"),o={rating:p.Manual,state:n.state,due:n.due,stability:n.stability,difficulty:n.difficulty,elapsed_days:0,last_elapsed_days:n.elapsed_days,scheduled_days:d,review:t},s={card:{...n,due:t,stability:0,difficulty:0,elapsed_days:0,scheduled_days:0,reps:a?0:n.reps,lapses:a?0:n.lapses,state:y.New,last_review:n.last_review},log:o};return r&&typeof r=="function"?r(s):s}reschedule(e,t={}){if(!Array.isArray(e))throw new Error("cards must be an array");const a=[];for(const r of e){if(W(r.state)!==y.Review||!r.last_review)continue;const n=Math.floor(r.scheduled_days),d=this.next_interval(+r.stability.toFixed(2),Math.round(r.elapsed_days),t.enable_fuzz??!0);if(d===n||d===0)continue;const o={...r};o.scheduled_days=d;const s=B(o.last_review,d,!0);t.dateHandler&&typeof t.dateHandler=="function"?o.due=t.dateHandler(s):o.due=s,a.push(o)}return a}}class me{constructor(){this.userSettings={learningSteps:"1 10",relearningSteps:"10",dailyNewCardsLimit:20,dailyReviewLimit:200,enableTraditionalLearningSteps:!1},this.config={...pe},this.fsrsInstance=this.createFSRSInstance(this.config),this.initializeUserSettings()}async initializeUserSettings(){try{this.userSettings=await Se(),be(e=>{this.userSettings={...this.userSettings,...e},console.log("FSRS service updated with new settings:",this.userSettings)})}catch(e){console.error("Failed to initialize user settings:",e)}}createFSRSInstance(e){const t=te({request_retention:e.requestRetention,maximum_interval:e.maximumInterval,enable_fuzz:!0});return new pt(t)}convertToFSRSCard(e){return{due:e.due,stability:e.stability,difficulty:e.difficulty,elapsed_days:e.elapsedDays,scheduled_days:e.scheduledDays,reps:e.reps,lapses:e.lapses,state:this.convertToFSRSState(e.state),last_review:e.lastReview||void 0}}convertToAppCard(e){return{due:e.due,stability:e.stability,difficulty:e.difficulty,elapsedDays:e.elapsed_days,scheduledDays:e.scheduled_days,reps:e.reps,lapses:e.lapses,state:this.convertFromFSRSState(e.state),lastReview:e.last_review}}convertToFSRSState(e){switch(e){case"New":return y.New;case"Learning":return y.Learning;case"Review":return y.Review;case"Relearning":return y.Relearning;default:return y.New}}convertFromFSRSState(e){switch(e){case y.New:return"New";case y.Learning:return"Learning";case y.Review:return"Review";case y.Relearning:return"Relearning";default:return"New"}}mapRatingToFSRS(e){switch(e){case"Again":return p.Again;case"Hard":return p.Hard;case"Good":return p.Good;case"Easy":return p.Easy;default:return p.Good}}async reviewCard(e,t){try{const a=await g.getCardById(e);if(!a)throw new Error(`Card with id ${e} not found`);const r=new Date;return this.userSettings.enableTraditionalLearningSteps?await this.handleTraditionalLearningSteps(a,t,r):await this.handleTaskDrivenLearning(a,t,r)}catch(a){return console.error("Error reviewing card:",a),{success:!1,error:a instanceof Error?a.message:"Unknown error"}}}async handleTaskDrivenLearning(e,t,a){if(e.state==="New"||e.state==="Relearning"){if(t==="Good"||t==="Easy")return await this.graduateCardToReview(e,t,a);{const r=await g.updateCard(e.id,{due:a,updatedAt:a});return await this.logReview(e,r,t,a),{success:!0,nextReview:r.due,interval:0}}}else if(e.state==="Review")if(t==="Again"){const r=await g.updateCard(e.id,{state:"Relearning",learningStep:0,due:a,lapses:e.lapses+1,updatedAt:a});return await this.logReview(e,r,t,a),{success:!0,nextReview:r.due,interval:0}}else return await this.applyFSRSScheduling(e,t,a);else return await this.applyFSRSScheduling(e,t,a)}async handleTraditionalLearningSteps(e,t,a){if(e.state==="New"||e.state==="Learning")return await this.handleLearningSteps(e,t,a,"learningSteps");if(e.state==="Relearning")return await this.handleLearningSteps(e,t,a,"relearningSteps");if(e.state==="Review")if(t==="Again"){const r=await g.updateCard(e.id,{state:"Relearning",learningStep:0,due:this.calculateStepDue(a,0,"relearningSteps"),lapses:e.lapses+1,updatedAt:a});return await this.logReview(e,r,t,a),{success:!0,nextReview:r.due,interval:0}}else return await this.applyFSRSScheduling(e,t,a);return await this.applyFSRSScheduling(e,t,a)}async handleLearningSteps(e,t,a,r){const n=r==="learningSteps"?this.userSettings.learningSteps:this.userSettings.relearningSteps,d=ce(n);if(t==="Again"){const o=await g.updateCard(e.id,{learningStep:0,due:this.calculateStepDue(a,0,r),updatedAt:a});return await this.logReview(e,o,t,a),{success:!0,nextReview:o.due,interval:0}}else{if(t==="Easy")return await this.graduateCardToReview(e,t,a);if(t==="Good"||t==="Hard"){const s=(e.learningStep||0)+1;if(s>=d.length)return await this.graduateCardToReview(e,t,a);{const c=await g.updateCard(e.id,{state:r==="learningSteps"?"Learning":"Relearning",learningStep:s,due:this.calculateStepDue(a,s,r),updatedAt:a});return await this.logReview(e,c,t,a),{success:!0,nextReview:c.due,interval:0}}}}return await this.applyFSRSScheduling(e,t,a)}calculateStepDue(e,t,a){const r=a==="learningSteps"?this.userSettings.learningSteps:this.userSettings.relearningSteps,n=ce(r);if(t>=n.length)return e;const d=n[t];return new Date(e.getTime()+d*60*1e3)}async graduateCardToReview(e,t,a){const r={due:a,stability:0,difficulty:0,elapsed_days:0,scheduled_days:0,reps:0,lapses:e.lapses,state:y.New,last_review:void 0},n=this.mapRatingToFSRS(t),o=this.fsrsInstance.repeat(r,a)[n],s=this.convertToAppCard(o.card),c=await g.updateCard(e.id,{...s,state:"Review",learningStep:1,reps:e.reps+1});return await this.logReview(e,c,t,a),{success:!0,nextReview:c.due,interval:c.scheduledDays}}async applyFSRSScheduling(e,t,a){const r=this.convertToFSRSCard(e),n=this.mapRatingToFSRS(t),o=this.fsrsInstance.repeat(r,a)[n],s=this.convertToAppCard(o.card),c=await g.updateCard(e.id,{...s,reps:e.reps+1});return await this.logReview(e,c,t,a),{success:!0,nextReview:c.due,interval:c.scheduledDays}}async logReview(e,t,a,r){await g.addReviewLog({cardId:e.id,reviewTime:r,rating:this.convertAppRatingToNumber(a),stateBefore:e.state,stateAfter:t.state,stabilityBefore:e.stability,stabilityAfter:t.stability,difficultyBefore:e.difficulty,difficultyAfter:t.difficulty,interval:t.scheduledDays,lastInterval:e.scheduledDays})}convertAppRatingToNumber(e){switch(e){case"Again":return 1;case"Hard":return 2;case"Good":return 3;case"Easy":return 4;default:return 3}}async getNextReviewDate(e,t){const a=this.convertToFSRSCard(e),r=this.mapRatingToFSRS(t);return this.fsrsInstance.repeat(a,new Date)[r].card.due}async predictRetention(e){const a=(new Date().getTime()-e.due.getTime())/(1e3*60*60*24);return e.stability>0?Math.exp(-a/e.stability):.9}async calculateLearningProgress(e){const t=e.length,a=e.filter(c=>c.state==="New").length,r=e.filter(c=>c.state==="Learning").length,n=e.filter(c=>c.state==="Review").length;let d=0,o=0;for(const c of e)if(c.state==="Review"&&c.stability>0){const u=await this.predictRetention(c);d+=u,o++}const s=o>0?d/o:.9;return{totalCards:t,newCards:a,learningCards:r,reviewCards:n,averageRetention:s,studyStreak:0}}async recommendStudySchedule(e){const t=new Date,a=e.filter(o=>o.due<=t).length,r=new Date(t);r.setDate(r.getDate()+1);const n=e.filter(o=>o.due>t&&o.due<=r).length,d=Math.max(20,Math.min(50,a+10));return{immediateReview:a,todayTotal:a,tomorrowTotal:n,recommendedDailyLimit:d}}updateConfig(e){if(e.requestRetention!==void 0&&(e.requestRetention<=0||e.requestRetention>1))throw new Error("Request retention must be between 0 and 1");if(e.maximumInterval!==void 0&&e.maximumInterval<0)throw new Error("Maximum interval must be non-negative");if(e.easyBonus!==void 0&&e.easyBonus<1)throw new Error("Easy bonus must be >= 1");if(e.hardFactor!==void 0&&e.hardFactor<=0)throw new Error("Hard factor must be positive");this.config={...this.config,...e},this.fsrsInstance=this.createFSRSInstance(this.config)}getConfig(){return{...this.config}}}new me;class vt{async buildQueue(e,t=20){try{console.log(`SchedulerService: Building queue for deck ${e}, limit ${t}`);const a=await g.getDueCards(e||void 0,t);return console.log(`SchedulerService: Found ${a.length} due cards`),a}catch(a){throw console.error("SchedulerService: Error building queue:",a),new Error(`Failed to build review queue: ${a instanceof Error?a.message:"Unknown error"}`)}}async buildDailyQueue(e){const t=await this.buildQueue(e);return{cards:t,newCards:t.filter(a=>a.state==="New"),learningCards:t.filter(a=>a.state==="Learning"),reviewCards:t.filter(a=>a.state==="Review"),totalCount:t.length}}async getNewCards(e,t){if(e===null){const a=await g.getAllDecks(),r=[];for(const n of a){const d=await g.getCardsByDeckId(n.id);r.push(...d)}return r.filter(n=>n.state==="New").slice(0,t)}else return(await g.getCardsByDeckId(e)).filter(r=>r.state==="New").slice(0,t)}async getLearningCards(e){const t=new Date;if(e===null){const a=await g.getAllDecks(),r=[];for(const n of a){const d=await g.getCardsByDeckId(n.id);r.push(...d)}return r.filter(n=>n.state!=="Learning"?!1:n.due?new Date(n.due)<=t:!0)}else return(await g.getCardsByDeckId(e)).filter(r=>r.state!=="Learning"?!1:r.due?new Date(r.due)<=t:!0)}async getReviewCards(e,t){const a=new Date;if(e===null){const r=await g.getAllDecks(),n=[];for(const d of r){const o=await g.getCardsByDeckId(d.id);n.push(...o)}return n.filter(d=>d.state!=="Review"||!d.due?!1:new Date(d.due)<=a).slice(0,t)}else return(await g.getCardsByDeckId(e)).filter(n=>n.state!=="Review"||!n.due?!1:new Date(n.due)<=a).slice(0,t)}async resetCardsInDeck(e){try{console.log(`SchedulerService: Resetting cards in deck ${e||"all decks"}`);const t=await g.resetCardsInDeck(e);return console.log(`SchedulerService: Successfully reset ${t} cards`),t}catch(t){throw console.error("SchedulerService: Error resetting cards:",t),new Error(`Failed to reset cards: ${t instanceof Error?t.message:"Unknown error"}`)}}async getQueueStats(e){try{const t=new Date;let a;if(e===null){const o=await g.getAllDecks();a=[];for(const s of o){const c=await g.getCardsByDeckId(s.id);a.push(...c)}}else a=await g.getCardsByDeckId(e);const r=a.filter(o=>o.state==="New").length,n=a.filter(o=>o.state==="Learning"&&(!o.due||new Date(o.due)<=t)).length,d=a.filter(o=>o.state==="Review"&&o.due&&new Date(o.due)<=t).length;return{newCount:r,learningCount:n,reviewCount:d,totalCount:r+n+d}}catch(t){return console.error("SchedulerService: Error getting queue stats:",t),{newCount:0,learningCount:0,reviewCount:0,totalCount:0}}}}const ye=new vt,N=new me;class xt{constructor(){this.initialized=!1}get isInitialized(){return this.initialized}async init(){if(!this.initialized)try{console.log("Initializing AnGear Background Service..."),await g.initDatabase(),await this.setupAlarms(),await this.initializeDefaultConfig(),this.initialized=!0,console.log("AnGear Background Service initialized successfully"),await this.updateBadge()}catch(e){throw console.error("Failed to initialize background service:",e),e}}async initializeWithRetry(e=3){if(this.initialized)return;let t;for(let r=1;r<=e;r++)try{if(console.log(`Initialization attempt ${r}/${e}`),await this.init(),this.initialized){console.log(`Initialization successful on attempt ${r}`);return}}catch(n){if(t=n instanceof Error?n:new Error(String(n)),console.error(`Initialization attempt ${r} failed:`,t.message),r<e){const d=r*1e3;console.log(`Waiting ${d}ms before retry...`),await new Promise(o=>setTimeout(o,d))}}const a=new Error(`Failed to initialize after ${e} attempts. Last error: ${t?.message||"Unknown error"}`);throw console.error("Critical initialization failure:",a.message),a}async setupAlarms(){await chrome.alarms.clearAll(),await chrome.alarms.create("daily-check",{delayInMinutes:1,periodInMinutes:60}),await chrome.alarms.create("health-check",{delayInMinutes:5,periodInMinutes:30}),console.log("Alarms set up successfully")}async initializeDefaultConfig(){console.log("Using default FSRS configuration")}async updateBadge(){try{const t=(await g.getDueCards()).length;t>0?(await chrome.action.setBadgeText({text:t>99?"99+":t.toString()}),await chrome.action.setBadgeBackgroundColor({color:"#E53E3E"})):await chrome.action.setBadgeText({text:""})}catch(e){console.error("Failed to update badge:",e)}}async handleAlarm(e){switch(e.name){case"daily-check":console.log("Running daily check..."),await this.updateBadge();break;default:console.log(`Unknown alarm: ${e.name}`)}}async handleMessage(e,t){try{switch(console.log(`Received message: ${e.type}`,e),this.initialized||(console.log("Service not initialized, attempting initialization..."),await this.initializeWithRetry()),e.type){case"CREATE_DECK":const a=await g.createDeck(e.payload);return await this.updateBadge(),{success:!0,data:a};case"GET_ALL_DECKS":return{success:!0,data:await g.getAllDecks()};case"GET_DECK_BY_ID":return{success:!0,data:await g.getDeckById(e.payload.id)};case"UPDATE_DECK":return await g.updateDeck(e.payload.id,e.payload.updates),{success:!0};case"DELETE_DECK":return await g.deleteDeck(e.payload.id),await this.updateBadge(),{success:!0};case"GET_DECK_STATS":return{success:!0,data:await g.getDeckStatistics(e.payload.deckId)};case"CREATE_NOTE":try{console.log("Creating note with payload:",e.payload);const v=await g.createNote(e.payload);return await g.createCardsForNote(v),await this.updateBadge(),console.log("Note and cards created successfully:",v.id),{success:!0,data:v}}catch(v){if(console.error("CREATE_NOTE operation failed:",v),v instanceof Error){if(v.message.includes("Duplicate key conflict"))return{success:!1,error:"Note creation failed due to database conflict. Please try again or restart the extension."};if(v.name==="ConstraintError"||v.message.includes("Key already exists"))return{success:!1,error:"Database constraint violation: A note with this identifier already exists. Please refresh the page and try again."}}throw v}case"GET_NOTES_BY_DECK":return{success:!0,data:await g.getNotesByDeckId(e.payload.deckId)};case"UPDATE_NOTE":return await g.updateNote(e.payload.id,e.payload.updates),{success:!0};case"DELETE_NOTE":return await g.deleteNote(e.payload.id),await this.updateBadge(),{success:!0};case"GET_NOTE_BY_ID":return{success:!0,data:await g.getNoteById(e.payload.id)};case"GET_DUE_CARDS":return{success:!0,data:await g.getDueCards(e.payload?.deckId,e.payload?.limit)};case"REVIEW_CARD":const u=await N.reviewCard(e.payload.cardId,e.payload.rating);return await this.updateBadge(),{success:!0,data:u};case"GET_CARD_PREDICTIONS":const l=await g.getCardById(e.payload.cardId);return l?{success:!0,data:{again:await N.getNextReviewDate(l,"Again"),hard:await N.getNextReviewDate(l,"Hard"),good:await N.getNextReviewDate(l,"Good"),easy:await N.getNextReviewDate(l,"Easy")}}:{success:!1,error:"Card not found"};case"GET_CARDS_BY_DECK":return{success:!0,data:await g.getCardsByDeckId(e.payload.deckId)};case"RESET_CARD_PROGRESS":return await g.resetCardProgress(e.payload.cardId),await this.updateBadge(),{success:!0};case"GET_FSRS_CONFIG":return{success:!0,data:N.getConfig()};case"UPDATE_FSRS_CONFIG":return N.updateConfig(e.payload),{success:!0};case"GET_FSRS_STATS":const S=await g.getCardsByDeckId(e.payload.deckId);return{success:!0,data:await N.calculateLearningProgress(S)};case"GET_USER_CONFIG":return{success:!0,data:{theme:"auto",language:"zh-CN"}};case"SAVE_USER_CONFIG":return{success:!0};case"GET_DATABASE_SIZE":return{success:!0,data:{decks:(await g.getAllDecks()).length}};case"VALIDATE_DATABASE_INTEGRITY":return{success:!0,data:await g.validateDatabaseIntegrity()};case"CLEAR_ALL_DATA":return await g.clearAllData(),await this.updateBadge(),{success:!0};case"STORE_AUDIO":return{success:!1,error:"Audio storage not implemented yet"};case"GET_AUDIO":return{success:!1,error:"Audio retrieval not implemented yet"};case"DELETE_AUDIO":return{success:!1,error:"Audio deletion not implemented yet"};case"BUILD_QUEUE":return{success:!0,data:await ye.buildQueue(e.payload?.deckId,e.payload?.limit)};case"RESET_CARDS_IN_DECK":const x=await ye.resetCardsInDeck(e.payload.deckId);return await this.updateBadge(),{success:!0,data:x};default:return console.warn(`Unknown message type: ${e.type}`),{success:!1,error:`Unknown message type: ${e.type}`}}}catch(a){return console.error(`Error handling message ${e.type}:`,a),a instanceof Error&&a.message.includes("Failed to initialize")?{success:!1,error:"应用初始化失败，请尝试重新加载扩展。如果问题持续存在，请检查浏览器控制台获取详细错误信息。"}:a instanceof Error&&a.message.includes("Database not initialized")?{success:!1,error:"数据库连接失败，正在尝试重新连接...请稍后重试。"}:{success:!1,error:a instanceof Error?a.message:"Unknown error"}}}getCardTemplatesForNoteType(e){switch(e){case"CtoE":return["CtoE_ZhToEn"];case"Retranslate":return["Retranslate_Forward","Retranslate_Backward"];case"SentenceParaphrase":return["SentenceParaphrase_Listen","SentenceParaphrase_Speak"];case"Article":return["Article_Reading","Article_Questions"];default:return["Basic"]}}}const P=new xt;chrome.runtime.onStartup.addListener(async()=>{console.log("Extension startup");try{await P.init()}catch(i){console.error("Failed to initialize on startup:",i)}});chrome.runtime.onInstalled.addListener(async()=>{console.log("Extension installed");try{await P.init()}catch(i){console.error("Failed to initialize on install:",i)}});chrome.runtime.onMessage.addListener((i,e,t)=>(P.handleMessage(i,e).then(a=>t(a)).catch(a=>{console.error("Message handling error:",a),t({success:!1,error:a instanceof Error?a.message:"Unknown error"})}),!0));chrome.alarms.onAlarm.addListener(async i=>{if(i.name==="health-check")try{P.isInitialized||(console.log("Health check detected uninitialized service, attempting recovery..."),await P.init())}catch(e){console.error("Health check initialization failed:",e)}await P.handleAlarm(i)});chrome.action.onClicked.addListener(async i=>{await chrome.tabs.create({url:chrome.runtime.getURL("main.html")})});console.log("AnGear Background Script loaded");
